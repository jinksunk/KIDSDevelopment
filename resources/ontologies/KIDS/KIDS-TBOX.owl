<?xml version="1.0"?>


<!DOCTYPE Ontology [
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY xml "http://www.w3.org/XML/1998/namespace" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
]>


<Ontology xmlns="http://www.w3.org/2002/07/owl#"
     xml:base="http://solomon.cs.iastate.edu/ontologies/KIDS.owl"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     ontologyIRI="http://solomon.cs.iastate.edu/ontologies/KIDS.owl">
    <Prefix name="" IRI="http://solomon.cs.iastate.edu/ontologies/KIDS.owl#"/>
    <Prefix name="owl" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="rdf" IRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    <Prefix name="xsd" IRI="http://www.w3.org/2001/XMLSchema#"/>
    <Prefix name="KIDS" IRI="http://solomon.cs.iastate.edu/ontologies/KIDS.owl#"/>
    <Prefix name="rdfs" IRI="http://www.w3.org/2000/01/rdf-schema#"/>
    <Annotation>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">A signal oriented ontology to support KIDS (Knowledge-based IDS).
This is the &quot;master&quot; version; the definition of the classes and relations between them, but with no individuals.</Literal>
    </Annotation>
    <Declaration>
        <Class IRI="#ApplicationIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ApplicationResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ApplicationResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ApplicationSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#AttackMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#AutomatedAttackMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#BitMaskMatchNonZero"/>
    </Declaration>
    <Declaration>
        <Class IRI="#BroCompatibleIDS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#BroEventDetectionSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#BroIDSPolicy"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ByteEquality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ByteHexDelimitedValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ByteIntegerValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ByteRange"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ByteRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ByteSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ByteSubsequenceMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#CodeRedWormPropagationEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ComponentFailureEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ContextFreeGrammar"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ContextSensitiveGrammar"/>
    </Declaration>
    <Declaration>
        <Class IRI="#CorrelationRelation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#CountTimeBracketValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DDOSAttackMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DNSIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DNSProtocolResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DNSResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DNSSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Dataset"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DatasetLabel"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DatasetView"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Detector"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DetectorSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DoubleValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Event"/>
    </Declaration>
    <Declaration>
        <Class IRI="#GrepRuleSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPGetRequest"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPGetRequestParameter"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPGetRequestParameter_StringMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPGetRequestResource_StringMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPGetRequestStringValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPPacketContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPProtocolResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HostIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HostResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HostResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HostSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ICMPIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ICMPProtocolResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ICMPResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ICMPSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IDS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IISEventLogDataset"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IISEventLogMessage_HTTPGetParameterRepresentation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IISEventLogMessage_IPv4SourceIPAddressRepresentation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPAddressCountThreshold"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPAddressRange"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPAddressRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPAddressRangeSetValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPAddressSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPAddressValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPDestinationAddress_IPRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketContext_SignalDomain"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketData"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketData_ByteSubsequenceMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketData_StringMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketHeader"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketLength"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketTotalLength_IntegerComparison"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketTotalLength_IntegerEquality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketTotalLength_IntegerGreaterThan"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketTotalLength_IntegerInequality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketTotalLength_IntegerLessThan"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketTotalLength_IntegerRangeMembership"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacket_IPPacketDataRepresentation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacket_IPPacketProtocolNumberRepresentation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacket_IPv4SourceIPAddressRepresentation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacket_PacketLengthRepresentation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPProtocolNumber"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPProtocolNumberSignal_ByteRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPProtocolNumber_ByteEquality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPProtocolResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPSourceAddress_IPRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPSourceAddress_UniqueSourceIPAddressCountThreshold"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPv4Address"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPv4DestinationAddress"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPv4SourceAddress"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IntegerEquality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IntegerGreaterThan"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IntegerInequality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IntegerLessThan"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IntegerRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IntegerRangeSetValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IntegerRangeValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IntegerValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#LibPCAPDataset"/>
    </Declaration>
    <Declaration>
        <Class IRI="#LibPcapFilterDefinition"/>
    </Declaration>
    <Declaration>
        <Class IRI="#LibPcap_IPPacketView"/>
    </Declaration>
    <Declaration>
        <Class IRI="#LibPcap_SecondOfPacketsView"/>
    </Declaration>
    <Declaration>
        <Class IRI="#LogAnalysisRuleSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#MaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ManualAttackMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetflowDataset"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetflowRuleSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkFlowDataset"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkFlowSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkPacketDataset"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkPacketSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PCREGrammar"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketLength"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketLength_PositiveIntegerEquality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketRate"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketRate_IntegerInequality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketView"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketsPerMinute"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketsPerMinutePort80"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketsPerMinutePort80SampledEachPacket"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketsPerSecond"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PositiveIntegerEquality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PositiveIntegerGreaterThan"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PositiveIntegerInequality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PositiveIntegerLessThan"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PositiveIntegerRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RealInequality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RealRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ReconMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RegularGrammar"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Resource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Response"/>
    </Declaration>
    <Declaration>
        <Class IRI="#STDDEVThresholdExceeded"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SecondOfPacketsSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Signal"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SignalConstraint"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SignalDomain"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SignalDomainRepresentation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SignalManifestation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SignalValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SingleBitMaskMatchNonZero"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SnortCompatibleIDS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SnortFlagsExpressionMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SnortRule"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SnortRuleSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SnortTCPFlagsValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#StringMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#StringSignalValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SubstringMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPDestinationPort"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPDestinationPort_IntegerRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPFlagsSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPFlags_BitmaskNonZero"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPFlags_SingleBitmaskNonZero"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPFlags_SnortFlagsExpressionMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPacketContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPacketPayload_RegEx"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPacketPayload_StringMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPacketSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPacket_IPPacketTotalLengthRepresentation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPacket_TCPDestinationPortNumberRepresentation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPacket_TCPFlagsRepresentation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPacket_TCPPayloadSizeRepresentation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPayloadSize"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPayloadSize_STDDEVThresholdExceeded"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPort"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPProtocolResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPSourcePort"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TemporalSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TemporalView"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TimePeriod"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UDPIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UDPPacketContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UDPProtocolResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UDPResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UDPSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UniqueDestinationIPAddressCountThreshold"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UniqueIPAddressCountThreshold"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UniqueSourceIPAddressCountThreshold"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UserMasqueradeAttackMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#VirusAttackMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WindowsEventLogAnalysisRuleSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WindowsEventLogDataset"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WindowsEventLogEntrySignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WindowsEventLog_TextFileView"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WindowsIISEventLogEntrySignalContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WindowsLogAnalysis"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WormAttackMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#SignalInManifestation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#SignalManifestationIncludesSignal"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#bringsIntoExistence"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#canApplySignal"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#canApplySignalValue"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#canDetectEvent"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#canMonitor"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#canRepresent"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#canSeeManifestation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#coincidesWithDatasetLabel"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#compatibleWith"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#existsInView"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#exposesContext"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasConstraint"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasDatasetLabel"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasDetector"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasDomain"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasEncapsulatedContext"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasEventIncluded"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasResponse"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasSignalValue"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasSyntax"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#includesTimePeriod"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isAbleToRepresent"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isAffectedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isAppliedByDetector"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isCompatibleDatasetForSignal"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isConstraintOf"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isContainedIn"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isContainerOf"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isContextOfSignalDomain"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isDetectedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isDetectedByIDS"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isDetectorFor"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isDomainOfSignal"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isEncapsulatedInContext"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isEvaluableWithDataset"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isEvaluatedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isEvaluationOf"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isEventIdentifierFor"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isExposedIn"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isExpressibleInSyntax"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isIdentifiedByDetector"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isInContext"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isIncludedInDataset"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isIncludedInIDS"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isIncludedInIRS"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isIncludedInLabel"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isLabelForEvent"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isLabelForTimePeriod"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isLabelerForDatasetView"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isManifestedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isMitigatedByIRS"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isMonitoredBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isProducedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isProducedByContext"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isProducerOf"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isProvidedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isProviderOfResource"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isRepresentableBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isRepresentableInDetectorSyntax"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isRepresentationOfSignal"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isRepresentedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isRepresentedInDataset"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isResponseFor"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isSupportedByDatasetView"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isUsableByDetectorSyntax"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isValueOfSignal"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isViewableAs"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isVisibleToDetector"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#producesRepresentation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#providedByDatasetView"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#providesResource"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#providesViewOf"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#realizesSignalRepresentation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#relationUsesResource"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#representsDetector"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#requiresResource"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#respondsTo"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#supportCorrelationRelation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#usedByCorrelationRelation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#usedByResponse"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#usesResource"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#datasetLocation"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#datasetParserImplementation"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#detectorExecutionCommand"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasCorrelationRelationImplementation"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasImplementationClass"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasLabelDataLocation"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasLabelFunction"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasSyntaxProductionImplementation"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasValue"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#signalConstraintImplementation"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#viewProductionImplementation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#Grep2.5.1RuleSyntax"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#HTTPGetParameter"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#HTTPGetParameterRepresentation1_IISEventLogDatasetTextViewManifestation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#HTTPGetRequestResource"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IISEventLogMessageContext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IISEventLogMessageContext_HTTPGetParameterRepresentation1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IISEventLogMessageContext_IPv4SourceAddressSignalDomainRepresentation1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IPPacket"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IPPacketDataRepresentation1_LIBPCAPDatasetNativeViewManifestation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IPPacketDataResource"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IPPacketID"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IPPacketProtocolRepresentation1_LIBPCAPDatasetNativeViewManifestation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IPPacket_IPPacketDataRepresentation1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IPPacket_IPPacketProtocolRepresentation1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IPPacket_PacketLengthRepresentation1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IPPacket_SourceIPAddressRepresentation1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IPv4AddressRangeSetSignalConstraint"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IPv4DestinationAddressSignalDomain"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IPv4SourceAddressSignalDomain"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#NTEventLogRecordID"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#PacketLengthRepresentation1_LIBPCAPDatasetNativeViewManifestation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#PacketLengthSignalDomain"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#PerlCompatibleRegularExpression"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#PositiveIntegerRangeSet"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#STDDEVThresholdExceededConstraint"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#SnortIDS1.7"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#SourceIPAddressRepresentation1_CodeRedEvalPCAPDataset1ViewManifestation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#SourceIPAddressRepresentation1_CodeRedEvalSYSLOGDataset1ViewManifestation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPDestinationPort"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPDestinationPortNumberRepresentation1_CodeRedEvalPCAPDataset1View1Manifestation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPFlags"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPFlagsRepresentation1_LIBPCAPDatasetNativeViewManifestation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPPacket"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPPacketDataLength"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPPacket_TCPDestinationPortNumberRepresentation1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPPacket_TCPFlagsRepresentation1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPPacket_TCPPacketDataRepresentation1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPPacket_TCPPayloadSizeRepresentation1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPPayloadSizeDomain"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPPayloadSizeRepresentation1_LIBPCAPDatasetNativeViewManifestation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#UniqueDstIPPerSrcPerMin"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#WindowsLogEntry"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#bitmaskMatchNonZero"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#bpfFilterSyntax"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#broEventDetectionSyntax"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#byteAsIntegerEquality"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#byteSubsequenceMatch"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#destinationPortSet"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#dport80PacketsPerSecond"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#flowCount"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#hostFWBlock"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#instanceTimestamp"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#instancesWithinOneMinute"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#integerEquality"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#integerGreaterThan"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#integerLessThan"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#integerRangeSet"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#ipPacketSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#ipProtocolNumber"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#nullCorrelationFunction"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#positiveIntegerEquality"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#secondSampleByPacket"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#servicePortNumber"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#singleBitmaskMatchNonZero"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#snortFlagsExpressionMatch"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#snortRuleSyntax3"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#srcIPAddress"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#stringMatch"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#substringMatch"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#uniqueIPThreshold"/>
    </Declaration>
    <EquivalentClasses>
        <Class IRI="#ApplicationIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#IRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#ApplicationResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#BroIDSPolicy"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasSyntax"/>
            <Class IRI="#BroEventDetectionSyntax"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#DNSIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#UDPIRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#DNSProtocolResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Dataset"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#isContainerOf"/>
            <Class IRI="#SignalDomainContext"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Event"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#isProducerOf"/>
            <Class IRI="#Signal"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#HTTPGetRequestParameter_StringMatch"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasDomain"/>
                <Class IRI="#HTTPGetRequestParameter"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasConstraint"/>
                <NamedIndividual IRI="#stringMatch"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#HTTPGetRequestResource_StringMatch"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasDomain"/>
                <Class IRI="#HTTPGetRequest"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasConstraint"/>
                <NamedIndividual IRI="#stringMatch"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#HTTPIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#TCPIRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#HTTPProtocolResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#HostIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#IRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#HostResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#ICMPIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#IPIRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#ICMPProtocolResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IISEventLogMessage_HTTPGetParameterRepresentation"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#isProducedByContext"/>
                <Class IRI="#WindowsIISEventLogEntrySignalContext"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
                <NamedIndividual IRI="#HTTPGetParameter"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IISEventLogMessage_IPv4SourceIPAddressRepresentation"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#isProducedByContext"/>
                <Class IRI="#WindowsIISEventLogEntrySignalContext"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
                <NamedIndividual IRI="#IPv4SourceAddressSignalDomain"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IPIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#NetworkIRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#IPProtocolResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IPPacketContext_SignalDomain"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#isInContext"/>
            <Class IRI="#IPPacketSignalDomainContext"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IPPacketData_ByteSubsequenceMatch"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasConstraint"/>
                <Class IRI="#ByteSubsequenceMatch"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasDomain"/>
                <Class IRI="#IPPacketData"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IPPacketData_StringMatch"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasDomain"/>
                <Class IRI="#IPPacketData"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasConstraint"/>
                <NamedIndividual IRI="#stringMatch"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IPPacketTotalLength_IntegerGreaterThan"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasDomain"/>
                <Class IRI="#IPPacketLength"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasConstraint"/>
                <NamedIndividual IRI="#integerGreaterThan"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IPPacket_IPPacketDataRepresentation"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#isProducedByContext"/>
                <Class IRI="#IPPacketSignalDomainContext"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
                <NamedIndividual IRI="#IPPacketDataResource"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IPPacket_IPPacketProtocolNumberRepresentation"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#isProducedByContext"/>
                <Class IRI="#IPPacketSignalDomainContext"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
                <NamedIndividual IRI="#ipProtocolNumber"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IPPacket_IPv4SourceIPAddressRepresentation"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#isProducedByContext"/>
                <Class IRI="#IPPacketSignalDomainContext"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
                <NamedIndividual IRI="#IPv4SourceAddressSignalDomain"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IPPacket_PacketLengthRepresentation"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#isProducedByContext"/>
                <Class IRI="#IPPacketSignalDomainContext"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
                <NamedIndividual IRI="#PacketLengthSignalDomain"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IPProtocolNumber_ByteEquality"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasConstraint"/>
                <Class IRI="#ByteEquality"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasDomain"/>
                <Class IRI="#IPProtocolNumber"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#LibPcapFilterDefinition"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#hasSyntax"/>
            <NamedIndividual IRI="#bpfFilterSyntax"/>
        </ObjectHasValue>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#LibPcap_IPPacketView"/>
        <DataHasValue>
            <DataProperty IRI="#viewProductionImplementation"/>
            <Literal datatypeIRI="&xsd;string">net.strasnet.kids.measurement.datasetviews.NativeLibPCAPView</Literal>
        </DataHasValue>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#NetworkIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#IRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#NetworkResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#NetworkResponse"/>
        <ObjectIntersectionOf>
            <Class IRI="#Response"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#usesResource"/>
                <Class IRI="#NetworkResource"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#PacketLength_PositiveIntegerEquality"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasConstraint"/>
                <Class IRI="#PositiveIntegerEquality"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasDomain"/>
                <Class IRI="#PacketLength"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#PacketRate_IntegerInequality"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasConstraint"/>
                <Class IRI="#IntegerInequality"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasDomain"/>
                <Class IRI="#PacketRate"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#PacketsPerSecond"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#isInContext"/>
            <Class IRI="#SecondOfPacketsSignalDomainContext"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#SnortRule"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasSyntax"/>
            <Class IRI="#SnortRuleSyntax"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPDestinationPort_IntegerRangeSet"/>
        <ObjectIntersectionOf>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasConstraint"/>
                <NamedIndividual IRI="#integerRangeSet"/>
            </ObjectHasValue>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasDomain"/>
                <NamedIndividual IRI="#TCPDestinationPort"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPFlags_BitmaskNonZero"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasConstraint"/>
                <Class IRI="#BitMaskMatchNonZero"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasDomain"/>
                <Class IRI="#TCPFlagsSet"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPFlags_SingleBitmaskNonZero"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasConstraint"/>
                <Class IRI="#SingleBitMaskMatchNonZero"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasDomain"/>
                <Class IRI="#TCPFlagsSet"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPFlags_SnortFlagsExpressionMatch"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasConstraint"/>
                <Class IRI="#SnortFlagsExpressionMatch"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasDomain"/>
                <Class IRI="#TCPFlagsSet"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#IPIRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#TCPProtocolResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPPacketContext"/>
        <Class IRI="#TCPPacketSignalDomainContext"/>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPPacketPayload_StringMatch"/>
        <ObjectIntersectionOf>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasConstraint"/>
                <NamedIndividual IRI="#stringMatch"/>
            </ObjectHasValue>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasDomain"/>
                <NamedIndividual IRI="#TCPPacketDataLength"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPPacket_IPPacketTotalLengthRepresentation"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#isProducedByContext"/>
                <Class IRI="#TCPPacketContext"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
                <NamedIndividual IRI="#TCPPacketDataLength"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPPacket_TCPDestinationPortNumberRepresentation"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#isProducedByContext"/>
                <Class IRI="#TCPPacketSignalDomainContext"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
                <NamedIndividual IRI="#TCPDestinationPort"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPPacket_TCPFlagsRepresentation"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#isProducedByContext"/>
                <Class IRI="#TCPPacketContext"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
                <NamedIndividual IRI="#TCPFlags"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPPacket_TCPPayloadSizeRepresentation"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#isProducedByContext"/>
                <Class IRI="#TCPPacketContext"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
                <NamedIndividual IRI="#TCPPayloadSizeDomain"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPPayloadSize_STDDEVThresholdExceeded"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasConstraint"/>
                <Class IRI="#STDDEVThresholdExceeded"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasDomain"/>
                <Class IRI="#TCPPayloadSize"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#UDPIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#IPIRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#UDPProtocolResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#WindowsEventLog_TextFileView"/>
        <DataHasValue>
            <DataProperty IRI="#viewProductionImplementation"/>
            <Literal datatypeIRI="&xsd;string">net.strasnet.kids.measurement.datasetviews.EventLogTextFileView</Literal>
        </DataHasValue>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#WindowsLogAnalysis"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasSyntax"/>
            <Class IRI="#WindowsEventLogAnalysisRuleSyntax"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <SubClassOf>
        <Class IRI="#ApplicationResource"/>
        <Class IRI="#Resource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ApplicationResponse"/>
        <Class IRI="#Response"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ApplicationSignalDomainContext"/>
        <Class IRI="#SignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ApplicationSignalDomainContext"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isProviderOfResource"/>
            <NamedIndividual IRI="#NTEventLogRecordID"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#AttackMaliciousActivityEvent"/>
        <Class IRI="#MaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#AutomatedAttackMaliciousActivityEvent"/>
        <Class IRI="#AttackMaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#BitMaskMatchNonZero"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#BroCompatibleIDS"/>
        <Class IRI="#IDS"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#BroEventDetectionSyntax"/>
        <Class IRI="#DetectorSyntax"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#BroEventDetectionSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#TCPPayloadSize_STDDEVThresholdExceeded"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#BroIDSPolicy"/>
        <Class IRI="#Detector"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ByteEquality"/>
        <Class IRI="#ByteRange"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ByteHexDelimitedValue"/>
        <Class IRI="#SignalValue"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ByteIntegerValue"/>
        <Class IRI="#SignalValue"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ByteRange"/>
        <Class IRI="#ByteSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ByteRangeSet"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ByteSet"/>
        <Class IRI="#ByteRangeSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ByteSubsequenceMatch"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#CodeRedWormPropagationEvent"/>
        <Class IRI="#WormAttackMaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ComponentFailureEvent"/>
        <Class IRI="#Event"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ContextFreeGrammar"/>
        <Class IRI="#PCREGrammar"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ContextSensitiveGrammar"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#CountTimeBracketValue"/>
        <Class IRI="#SignalValue"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DDOSAttackMaliciousActivityEvent"/>
        <Class IRI="#AutomatedAttackMaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DNSProtocolResponse"/>
        <Class IRI="#UDPProtocolResponse"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DNSResource"/>
        <Class IRI="#UDPResource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DNSSignalDomainContext"/>
        <Class IRI="#UDPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DoubleValue"/>
        <Class IRI="#SignalValue"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#GrepRuleSyntax"/>
        <Class IRI="#DetectorSyntax"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#GrepRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#HTTPGetRequestParameter_StringMatch"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPGetRequest"/>
        <Class IRI="#IPPacketData"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPGetRequest"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPGetRequestParameter"/>
        <Class IRI="#IPPacketData"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPGetRequestParameter"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPGetRequestParameter_StringMatch"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPGetRequestParameter_StringMatch"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isExpressibleInSyntax"/>
            <NamedIndividual IRI="#Grep2.5.1RuleSyntax"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPGetRequestResource_StringMatch"/>
        <Class IRI="#IPPacketData_StringMatch"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPGetRequestStringValue"/>
        <Class IRI="#StringSignalValue"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPGetRequestStringValue"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isRepresentableInDetectorSyntax"/>
            <NamedIndividual IRI="#snortRuleSyntax3"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPPacketContext"/>
        <Class IRI="#HTTPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPProtocolResponse"/>
        <Class IRI="#TCPProtocolResponse"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPResource"/>
        <Class IRI="#TCPResource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPSignalDomainContext"/>
        <Class IRI="#TCPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HostResource"/>
        <Class IRI="#Resource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HostResponse"/>
        <Class IRI="#Response"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HostSignalDomainContext"/>
        <Class IRI="#SignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ICMPProtocolResponse"/>
        <Class IRI="#IPProtocolResponse"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ICMPResource"/>
        <Class IRI="#IPResource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ICMPSignalDomainContext"/>
        <Class IRI="#IPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IISEventLogDataset"/>
        <Class IRI="#WindowsEventLogDataset"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IISEventLogDataset"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isContainerOf"/>
            <NamedIndividual IRI="#IISEventLogMessageContext"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IISEventLogMessage_HTTPGetParameterRepresentation"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IISEventLogMessage_IPv4SourceIPAddressRepresentation"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPAddressCountThreshold"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPAddressRange"/>
        <Class IRI="#IPAddressSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPAddressRangeSet"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPAddressRangeSetValue"/>
        <Class IRI="#SignalValue"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPAddressRangeSetValue"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isRepresentableInDetectorSyntax"/>
            <NamedIndividual IRI="#Grep2.5.1RuleSyntax"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPAddressRangeSetValue"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isRepresentableInDetectorSyntax"/>
            <NamedIndividual IRI="#bpfFilterSyntax"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPAddressRangeSetValue"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isRepresentableInDetectorSyntax"/>
            <NamedIndividual IRI="#snortRuleSyntax3"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPAddressSet"/>
        <Class IRI="#IPAddressRangeSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPAddressValue"/>
        <Class IRI="#IPAddressRange"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPDestinationAddress_IPRangeSet"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPDestinationAddress_IPRangeSet"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasConstraint"/>
                <Class IRI="#IPAddressRangeSet"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasDomain"/>
                <Class IRI="#IPv4SourceAddress"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketContext_SignalDomain"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketData"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketData_ByteSubsequenceMatch"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketData_ByteSubsequenceMatch"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isExpressibleInSyntax"/>
            <NamedIndividual IRI="#snortRuleSyntax3"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketData_StringMatch"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketHeader"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketLength"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketSignalDomainContext"/>
        <Class IRI="#NetworkPacketSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketTotalLength_IntegerComparison"/>
        <Class IRI="#IPPacketTotalLength_IntegerRangeMembership"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketTotalLength_IntegerEquality"/>
        <Class IRI="#IPPacketTotalLength_IntegerComparison"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketTotalLength_IntegerEquality"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketTotalLength_IntegerGreaterThan"/>
        <Class IRI="#IPPacketTotalLength_IntegerInequality"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketTotalLength_IntegerGreaterThan"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketTotalLength_IntegerInequality"/>
        <Class IRI="#IPPacketTotalLength_IntegerComparison"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketTotalLength_IntegerInequality"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketTotalLength_IntegerLessThan"/>
        <Class IRI="#IPPacketTotalLength_IntegerInequality"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketTotalLength_IntegerLessThan"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketTotalLength_IntegerRangeMembership"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacket_IPPacketDataRepresentation"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacket_IPPacketProtocolNumberRepresentation"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacket_IPv4SourceIPAddressRepresentation"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacket_PacketLengthRepresentation"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPProtocolNumber"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPProtocolNumberSignal_ByteRangeSet"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPProtocolNumber_ByteEquality"/>
        <Class IRI="#IPProtocolNumberSignal_ByteRangeSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPProtocolResponse"/>
        <Class IRI="#NetworkResponse"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPResource"/>
        <Class IRI="#NetworkResource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPSignalDomainContext"/>
        <Class IRI="#NetworkSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPSignalDomainContext"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isProviderOfResource"/>
            <NamedIndividual IRI="#IPv4SourceAddressSignalDomain"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPSourceAddress_IPRangeSet"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPSourceAddress_IPRangeSet"/>
        <ObjectIntersectionOf>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasConstraint"/>
                <NamedIndividual IRI="#IPv4AddressRangeSetSignalConstraint"/>
            </ObjectHasValue>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasDomain"/>
                <NamedIndividual IRI="#IPv4SourceAddressSignalDomain"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPSourceAddress_IPRangeSet"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isExpressibleInSyntax"/>
            <NamedIndividual IRI="#bpfFilterSyntax"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPSourceAddress_IPRangeSet"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isExpressibleInSyntax"/>
            <NamedIndividual IRI="#snortRuleSyntax3"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPSourceAddress_UniqueSourceIPAddressCountThreshold"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPv4Address"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPv4DestinationAddress"/>
        <Class IRI="#IPv4Address"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPv4SourceAddress"/>
        <Class IRI="#IPv4Address"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IntegerEquality"/>
        <Class IRI="#IntegerRangeSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IntegerGreaterThan"/>
        <Class IRI="#IntegerInequality"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IntegerInequality"/>
        <Class IRI="#IntegerRangeSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IntegerLessThan"/>
        <Class IRI="#IntegerInequality"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IntegerRangeSet"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IntegerRangeSetValue"/>
        <Class IRI="#SignalValue"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IntegerRangeSetValue"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isRepresentableInDetectorSyntax"/>
            <NamedIndividual IRI="#snortRuleSyntax3"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IntegerRangeValue"/>
        <Class IRI="#IntegerRangeSetValue"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IntegerValue"/>
        <Class IRI="#IntegerRangeValue"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPCAPDataset"/>
        <Class IRI="#NetworkPacketDataset"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPCAPDataset"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isContainerOf"/>
            <NamedIndividual IRI="#IPPacket"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPCAPDataset"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isContainerOf"/>
            <NamedIndividual IRI="#TCPPacket"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPcapFilterDefinition"/>
        <Class IRI="#Detector"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPcap_IPPacketView"/>
        <Class IRI="#PacketView"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPcap_IPPacketView"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#exposesContext"/>
                <Class IRI="#IPPacketSignalDomainContext"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#providesViewOf"/>
                <Class IRI="#LibPCAPDataset"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPcap_IPPacketView"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#exposesContext"/>
            <NamedIndividual IRI="#IPPacket"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPcap_IPPacketView"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#exposesContext"/>
            <NamedIndividual IRI="#TCPPacket"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPcap_SecondOfPacketsView"/>
        <Class IRI="#TemporalView"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPcap_SecondOfPacketsView"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#exposesContext"/>
                <Class IRI="#SecondOfPacketsSignalDomainContext"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#providesViewOf"/>
                <Class IRI="#LibPCAPDataset"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LogAnalysisRuleSyntax"/>
        <Class IRI="#DetectorSyntax"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MaliciousActivityEvent"/>
        <Class IRI="#Event"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ManualAttackMaliciousActivityEvent"/>
        <Class IRI="#AttackMaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetflowDataset"/>
        <Class IRI="#NetworkFlowDataset"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetflowRuleSyntax"/>
        <Class IRI="#DetectorSyntax"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetflowRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#IPDestinationAddress_IPRangeSet"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetflowRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#IPProtocolNumberSignal_ByteRangeSet"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetflowRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#IPSourceAddress_IPRangeSet"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetflowRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#IPSourceAddress_UniqueSourceIPAddressCountThreshold"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetflowRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#PacketLength_PositiveIntegerEquality"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkFlowDataset"/>
        <Class IRI="#Dataset"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkFlowDataset"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#isContainerOf"/>
            <Class IRI="#NetworkFlowSignalDomainContext"/>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkFlowSignalDomainContext"/>
        <Class IRI="#NetworkSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkPacketDataset"/>
        <Class IRI="#Dataset"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkPacketDataset"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#isContainerOf"/>
            <Class IRI="#NetworkPacketSignalDomainContext"/>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkPacketSignalDomainContext"/>
        <Class IRI="#NetworkSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkResource"/>
        <Class IRI="#Resource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkResponse"/>
        <Class IRI="#Response"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkSignalDomainContext"/>
        <Class IRI="#SignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PCREGrammar"/>
        <Class IRI="#ContextSensitiveGrammar"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketLength"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketLength_PositiveIntegerEquality"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketLength_PositiveIntegerEquality"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isExpressibleInSyntax"/>
            <NamedIndividual IRI="#bpfFilterSyntax"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketRate"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketRate_IntegerInequality"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketView"/>
        <Class IRI="#DatasetView"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketsPerMinute"/>
        <Class IRI="#PacketRate"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketsPerMinutePort80"/>
        <Class IRI="#PacketsPerMinute"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketsPerMinutePort80SampledEachPacket"/>
        <Class IRI="#PacketsPerMinutePort80"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketsPerSecond"/>
        <Class IRI="#PacketRate"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PositiveIntegerEquality"/>
        <Class IRI="#IntegerEquality"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PositiveIntegerEquality"/>
        <Class IRI="#PositiveIntegerRangeSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PositiveIntegerGreaterThan"/>
        <Class IRI="#IntegerGreaterThan"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PositiveIntegerGreaterThan"/>
        <Class IRI="#PositiveIntegerInequality"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PositiveIntegerInequality"/>
        <Class IRI="#IntegerInequality"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PositiveIntegerInequality"/>
        <Class IRI="#PositiveIntegerRangeSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PositiveIntegerLessThan"/>
        <Class IRI="#IntegerLessThan"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PositiveIntegerLessThan"/>
        <Class IRI="#PositiveIntegerInequality"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PositiveIntegerRangeSet"/>
        <Class IRI="#IntegerRangeSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RealInequality"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RealRangeSet"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ReconMaliciousActivityEvent"/>
        <Class IRI="#MaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RegularGrammar"/>
        <Class IRI="#ContextFreeGrammar"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#STDDEVThresholdExceeded"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SecondOfPacketsSignalDomainContext"/>
        <Class IRI="#TemporalSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SignalDomain"/>
        <Class IRI="#Resource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SingleBitMaskMatchNonZero"/>
        <Class IRI="#BitMaskMatchNonZero"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortCompatibleIDS"/>
        <Class IRI="#IDS"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortFlagsExpressionMatch"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortRule"/>
        <Class IRI="#Detector"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortRule"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#hasSyntax"/>
            <NamedIndividual IRI="#snortRuleSyntax3"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortRuleSyntax"/>
        <Class IRI="#DetectorSyntax"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#IPDestinationAddress_IPRangeSet"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#IPSourceAddress_UniqueSourceIPAddressCountThreshold"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortTCPFlagsValue"/>
        <Class IRI="#SignalValue"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortTCPFlagsValue"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isRepresentableInDetectorSyntax"/>
            <NamedIndividual IRI="#bpfFilterSyntax"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortTCPFlagsValue"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isRepresentableInDetectorSyntax"/>
            <NamedIndividual IRI="#snortRuleSyntax3"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#StringMatch"/>
        <Class IRI="#SubstringMatch"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#StringSignalValue"/>
        <Class IRI="#SignalValue"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SubstringMatch"/>
        <Class IRI="#RegularGrammar"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPDestinationPort"/>
        <Class IRI="#TCPPort"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPDestinationPort_IntegerRangeSet"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPDestinationPort_IntegerRangeSet"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isExpressibleInSyntax"/>
            <NamedIndividual IRI="#bpfFilterSyntax"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPFlagsSet"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPFlags_BitmaskNonZero"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPFlags_BitmaskNonZero"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isExpressibleInSyntax"/>
            <NamedIndividual IRI="#bpfFilterSyntax"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPFlags_SingleBitmaskNonZero"/>
        <Class IRI="#TCPFlags_BitmaskNonZero"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPFlags_SingleBitmaskNonZero"/>
        <Class IRI="#TCPFlags_SnortFlagsExpressionMatch"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPFlags_SnortFlagsExpressionMatch"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacketContext"/>
        <Class IRI="#TCPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacketPayload_RegEx"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacketPayload_StringMatch"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacketPayload_StringMatch"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isExpressibleInSyntax"/>
            <NamedIndividual IRI="#bpfFilterSyntax"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacketSignalDomainContext"/>
        <Class IRI="#IPPacketSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacketSignalDomainContext"/>
        <Class IRI="#TCPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacketSignalDomainContext"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isProviderOfResource"/>
            <NamedIndividual IRI="#servicePortNumber"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacket_IPPacketTotalLengthRepresentation"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacket_TCPDestinationPortNumberRepresentation"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacket_TCPFlagsRepresentation"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacket_TCPPayloadSizeRepresentation"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPayloadSize"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPayloadSize_STDDEVThresholdExceeded"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPayloadSize_STDDEVThresholdExceeded"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isExpressibleInSyntax"/>
            <NamedIndividual IRI="#broEventDetectionSyntax"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPort"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPProtocolResponse"/>
        <Class IRI="#IPProtocolResponse"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPResource"/>
        <Class IRI="#IPResource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPSignalDomainContext"/>
        <Class IRI="#IPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPSourcePort"/>
        <Class IRI="#TCPPort"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TemporalSignalDomainContext"/>
        <Class IRI="#SignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TemporalView"/>
        <Class IRI="#DatasetView"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UDPPacketContext"/>
        <Class IRI="#UDPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UDPProtocolResponse"/>
        <Class IRI="#IPProtocolResponse"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UDPResource"/>
        <Class IRI="#IPResource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UDPSignalDomainContext"/>
        <Class IRI="#IPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UniqueDestinationIPAddressCountThreshold"/>
        <Class IRI="#UniqueIPAddressCountThreshold"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UniqueIPAddressCountThreshold"/>
        <Class IRI="#IPAddressCountThreshold"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UniqueSourceIPAddressCountThreshold"/>
        <Class IRI="#UniqueIPAddressCountThreshold"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UserMasqueradeAttackMaliciousActivityEvent"/>
        <Class IRI="#ManualAttackMaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VirusAttackMaliciousActivityEvent"/>
        <Class IRI="#AutomatedAttackMaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsEventLogAnalysisRuleSyntax"/>
        <Class IRI="#LogAnalysisRuleSyntax"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsEventLogDataset"/>
        <Class IRI="#Dataset"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsEventLogEntrySignalDomainContext"/>
        <Class IRI="#ApplicationSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsEventLog_TextFileView"/>
        <Class IRI="#DatasetView"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsEventLog_TextFileView"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#providesViewOf"/>
            <Class IRI="#WindowsEventLogDataset"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsEventLog_TextFileView"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#exposesContext"/>
            <NamedIndividual IRI="#IISEventLogMessageContext"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsIISEventLogEntrySignalContext"/>
        <Class IRI="#WindowsEventLogEntrySignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsIISEventLogEntrySignalContext"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isProviderOfResource"/>
            <NamedIndividual IRI="#IPv4SourceAddressSignalDomain"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsLogAnalysis"/>
        <Class IRI="#Detector"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WormAttackMaliciousActivityEvent"/>
        <Class IRI="#AutomatedAttackMaliciousActivityEvent"/>
    </SubClassOf>
    <DisjointClasses>
        <Class IRI="#ApplicationIRS"/>
        <Class IRI="#HostIRS"/>
        <Class IRI="#NetworkIRS"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ApplicationResource"/>
        <Class IRI="#HostResource"/>
        <Class IRI="#NetworkResource"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#AttackMaliciousActivityEvent"/>
        <Class IRI="#ReconMaliciousActivityEvent"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#AutomatedAttackMaliciousActivityEvent"/>
        <Class IRI="#ManualAttackMaliciousActivityEvent"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ComponentFailureEvent"/>
        <Class IRI="#MaliciousActivityEvent"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ICMPIRS"/>
        <Class IRI="#TCPIRS"/>
        <Class IRI="#UDPIRS"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ICMPProtocolResponse"/>
        <Class IRI="#TCPProtocolResponse"/>
        <Class IRI="#UDPProtocolResponse"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ICMPResource"/>
        <Class IRI="#TCPResource"/>
        <Class IRI="#UDPResource"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ICMPSignalDomainContext"/>
        <Class IRI="#TCPSignalDomainContext"/>
        <Class IRI="#UDPSignalDomainContext"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#VirusAttackMaliciousActivityEvent"/>
        <Class IRI="#WormAttackMaliciousActivityEvent"/>
    </DisjointClasses>
    <ClassAssertion>
        <Class IRI="#GrepRuleSyntax"/>
        <NamedIndividual IRI="#Grep2.5.1RuleSyntax"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#HTTPGetRequestParameter"/>
        <NamedIndividual IRI="#HTTPGetParameter"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#HTTPGetRequest"/>
        <NamedIndividual IRI="#HTTPGetRequestResource"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#WindowsIISEventLogEntrySignalContext"/>
        <NamedIndividual IRI="#IISEventLogMessageContext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IISEventLogMessage_HTTPGetParameterRepresentation"/>
        <NamedIndividual IRI="#IISEventLogMessageContext_HTTPGetParameterRepresentation1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IPPacketSignalDomainContext"/>
        <NamedIndividual IRI="#IPPacket"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SignalManifestation"/>
        <NamedIndividual IRI="#IPPacketDataRepresentation1_LIBPCAPDatasetNativeViewManifestation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IPPacketData"/>
        <NamedIndividual IRI="#IPPacketDataResource"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SignalDomain"/>
        <NamedIndividual IRI="#IPPacketID"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IPPacket_IPPacketDataRepresentation"/>
        <NamedIndividual IRI="#IPPacket_IPPacketDataRepresentation1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IPPacket_PacketLengthRepresentation"/>
        <NamedIndividual IRI="#IPPacket_PacketLengthRepresentation1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IPPacket_IPv4SourceIPAddressRepresentation"/>
        <NamedIndividual IRI="#IPPacket_SourceIPAddressRepresentation1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IPAddressRangeSet"/>
        <NamedIndividual IRI="#IPv4AddressRangeSetSignalConstraint"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IPv4DestinationAddress"/>
        <NamedIndividual IRI="#IPv4DestinationAddressSignalDomain"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IPv4SourceAddress"/>
        <NamedIndividual IRI="#IPv4SourceAddressSignalDomain"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PacketLength"/>
        <NamedIndividual IRI="#PacketLengthSignalDomain"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#STDDEVThresholdExceeded"/>
        <NamedIndividual IRI="#STDDEVThresholdExceededConstraint"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SignalManifestation"/>
        <NamedIndividual IRI="#SourceIPAddressRepresentation1_CodeRedEvalPCAPDataset1ViewManifestation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SignalManifestation"/>
        <NamedIndividual IRI="#SourceIPAddressRepresentation1_CodeRedEvalSYSLOGDataset1ViewManifestation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SignalManifestation"/>
        <NamedIndividual IRI="#TCPDestinationPortNumberRepresentation1_CodeRedEvalPCAPDataset1View1Manifestation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#TCPFlagsSet"/>
        <NamedIndividual IRI="#TCPFlags"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SignalManifestation"/>
        <NamedIndividual IRI="#TCPFlagsRepresentation1_LIBPCAPDatasetNativeViewManifestation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#TCPPacketSignalDomainContext"/>
        <NamedIndividual IRI="#TCPPacket"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IPPacketHeader"/>
        <NamedIndividual IRI="#TCPPacketDataLength"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IPPacketLength"/>
        <NamedIndividual IRI="#TCPPacketDataLength"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#TCPPacket_IPPacketTotalLengthRepresentation"/>
        <NamedIndividual IRI="#TCPPacket_TCPPacketDataRepresentation1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#TCPPacket_TCPPayloadSizeRepresentation"/>
        <NamedIndividual IRI="#TCPPacket_TCPPayloadSizeRepresentation1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#TCPPayloadSize"/>
        <NamedIndividual IRI="#TCPPayloadSizeDomain"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SignalManifestation"/>
        <NamedIndividual IRI="#TCPPayloadSizeRepresentation1_LIBPCAPDatasetNativeViewManifestation"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#BitMaskMatchNonZero"/>
        <NamedIndividual IRI="#bitmaskMatchNonZero"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#BroEventDetectionSyntax"/>
        <NamedIndividual IRI="#broEventDetectionSyntax"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#ByteEquality"/>
        <NamedIndividual IRI="#byteAsIntegerEquality"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#ByteSubsequenceMatch"/>
        <NamedIndividual IRI="#byteSubsequenceMatch"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PacketsPerSecond"/>
        <NamedIndividual IRI="#dport80PacketsPerSecond"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#NetworkResponse"/>
        <NamedIndividual IRI="#hostFWBlock"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#Resource"/>
        <NamedIndividual IRI="#instanceTimestamp"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IntegerEquality"/>
        <NamedIndividual IRI="#integerEquality"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IntegerInequality"/>
        <NamedIndividual IRI="#integerGreaterThan"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IntegerInequality"/>
        <NamedIndividual IRI="#integerLessThan"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IntegerRangeSet"/>
        <NamedIndividual IRI="#integerRangeSet"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IPPacketSignalDomainContext"/>
        <NamedIndividual IRI="#ipPacketSignalDomainContext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IPProtocolNumber"/>
        <NamedIndividual IRI="#ipProtocolNumber"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#CorrelationRelation"/>
        <NamedIndividual IRI="#nullCorrelationFunction"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PositiveIntegerEquality"/>
        <NamedIndividual IRI="#positiveIntegerEquality"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SecondOfPacketsSignalDomainContext"/>
        <NamedIndividual IRI="#secondSampleByPacket"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SingleBitMaskMatchNonZero"/>
        <NamedIndividual IRI="#singleBitmaskMatchNonZero"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SnortFlagsExpressionMatch"/>
        <NamedIndividual IRI="#snortFlagsExpressionMatch"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SnortRuleSyntax"/>
        <NamedIndividual IRI="#snortRuleSyntax3"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#StringMatch"/>
        <NamedIndividual IRI="#stringMatch"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SubstringMatch"/>
        <NamedIndividual IRI="#substringMatch"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#UniqueDestinationIPAddressCountThreshold"/>
        <NamedIndividual IRI="#uniqueIPThreshold"/>
    </ClassAssertion>
    <SameIndividual>
        <NamedIndividual IRI="#IPPacket"/>
        <NamedIndividual IRI="#ipPacketSignalDomainContext"/>
    </SameIndividual>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#HTTPGetParameter"/>
        <NamedIndividual IRI="#IISEventLogMessageContext"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#HTTPGetParameter"/>
        <NamedIndividual IRI="#TCPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#HTTPGetRequestResource"/>
        <NamedIndividual IRI="#IISEventLogMessageContext"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#HTTPGetRequestResource"/>
        <NamedIndividual IRI="#TCPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isManifestedBy"/>
        <NamedIndividual IRI="#IISEventLogMessageContext_HTTPGetParameterRepresentation1"/>
        <NamedIndividual IRI="#HTTPGetParameterRepresentation1_IISEventLogDatasetTextViewManifestation"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isProducedByContext"/>
        <NamedIndividual IRI="#IISEventLogMessageContext_HTTPGetParameterRepresentation1"/>
        <NamedIndividual IRI="#IISEventLogMessageContext"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isProducedByContext"/>
        <NamedIndividual IRI="#IISEventLogMessageContext_IPv4SourceAddressSignalDomainRepresentation1"/>
        <NamedIndividual IRI="#IISEventLogMessageContext"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isProvidedBy"/>
        <NamedIndividual IRI="#IPPacketDataResource"/>
        <NamedIndividual IRI="#IPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#IPPacketID"/>
        <NamedIndividual IRI="#TCPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isManifestedBy"/>
        <NamedIndividual IRI="#IPPacket_IPPacketDataRepresentation1"/>
        <NamedIndividual IRI="#IPPacketDataRepresentation1_LIBPCAPDatasetNativeViewManifestation"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isProducedByContext"/>
        <NamedIndividual IRI="#IPPacket_IPPacketDataRepresentation1"/>
        <NamedIndividual IRI="#IPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isManifestedBy"/>
        <NamedIndividual IRI="#IPPacket_IPPacketProtocolRepresentation1"/>
        <NamedIndividual IRI="#IPPacketProtocolRepresentation1_LIBPCAPDatasetNativeViewManifestation"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isProducedByContext"/>
        <NamedIndividual IRI="#IPPacket_IPPacketProtocolRepresentation1"/>
        <NamedIndividual IRI="#IPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isProducedByContext"/>
        <NamedIndividual IRI="#IPPacket_PacketLengthRepresentation1"/>
        <NamedIndividual IRI="#IPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isProducedByContext"/>
        <NamedIndividual IRI="#IPPacket_SourceIPAddressRepresentation1"/>
        <NamedIndividual IRI="#ipPacketSignalDomainContext"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#IPv4DestinationAddressSignalDomain"/>
        <NamedIndividual IRI="#IPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
        <NamedIndividual IRI="#IPv4SourceAddressSignalDomain"/>
        <NamedIndividual IRI="#IISEventLogMessageContext_IPv4SourceAddressSignalDomainRepresentation1"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#IPv4SourceAddressSignalDomain"/>
        <NamedIndividual IRI="#IPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#IPv4SourceAddressSignalDomain"/>
        <NamedIndividual IRI="#IISEventLogMessageContext"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#realizesSignalRepresentation"/>
        <NamedIndividual IRI="#PacketLengthRepresentation1_LIBPCAPDatasetNativeViewManifestation"/>
        <NamedIndividual IRI="#IPPacket_PacketLengthRepresentation1"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#PacketLengthSignalDomain"/>
        <NamedIndividual IRI="#IPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
        <NamedIndividual IRI="#TCPDestinationPort"/>
        <NamedIndividual IRI="#TCPPacket_TCPDestinationPortNumberRepresentation1"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#TCPDestinationPort"/>
        <NamedIndividual IRI="#TCPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#realizesSignalRepresentation"/>
        <NamedIndividual IRI="#TCPDestinationPortNumberRepresentation1_CodeRedEvalPCAPDataset1View1Manifestation"/>
        <NamedIndividual IRI="#TCPPacket_TCPDestinationPortNumberRepresentation1"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
        <NamedIndividual IRI="#TCPFlags"/>
        <NamedIndividual IRI="#TCPPacket_TCPFlagsRepresentation1"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#TCPFlags"/>
        <NamedIndividual IRI="#TCPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isProviderOfResource"/>
        <NamedIndividual IRI="#TCPPacket"/>
        <NamedIndividual IRI="#servicePortNumber"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isProviderOfResource"/>
        <NamedIndividual IRI="#TCPPacket"/>
        <NamedIndividual IRI="#IPv4SourceAddressSignalDomain"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
        <NamedIndividual IRI="#TCPPacketDataLength"/>
        <NamedIndividual IRI="#TCPPacket_TCPPacketDataRepresentation1"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#TCPPacketDataLength"/>
        <NamedIndividual IRI="#TCPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isProducedByContext"/>
        <NamedIndividual IRI="#TCPPacket_TCPDestinationPortNumberRepresentation1"/>
        <NamedIndividual IRI="#TCPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isProducedByContext"/>
        <NamedIndividual IRI="#TCPPacket_TCPFlagsRepresentation1"/>
        <NamedIndividual IRI="#TCPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#TCPPayloadSizeDomain"/>
        <NamedIndividual IRI="#TCPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#realizesSignalRepresentation"/>
        <NamedIndividual IRI="#TCPPayloadSizeRepresentation1_LIBPCAPDatasetNativeViewManifestation"/>
        <NamedIndividual IRI="#TCPPacket_TCPPayloadSizeRepresentation1"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#hasEncapsulatedContext"/>
        <NamedIndividual IRI="#WindowsLogEntry"/>
        <NamedIndividual IRI="#TCPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#requiresResource"/>
        <NamedIndividual IRI="#hostFWBlock"/>
        <NamedIndividual IRI="#IPv4SourceAddressSignalDomain"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#usesResource"/>
        <NamedIndividual IRI="#hostFWBlock"/>
        <NamedIndividual IRI="#destinationPortSet"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#usesResource"/>
        <NamedIndividual IRI="#hostFWBlock"/>
        <NamedIndividual IRI="#servicePortNumber"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#relationUsesResource"/>
        <NamedIndividual IRI="#instancesWithinOneMinute"/>
        <NamedIndividual IRI="#instanceTimestamp"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
        <NamedIndividual IRI="#ipProtocolNumber"/>
        <NamedIndividual IRI="#IPPacket_IPPacketProtocolRepresentation1"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#ipProtocolNumber"/>
        <NamedIndividual IRI="#IPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isContextOfSignalDomain"/>
        <NamedIndividual IRI="#secondSampleByPacket"/>
        <NamedIndividual IRI="#dport80PacketsPerSecond"/>
    </ObjectPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasSyntaxProductionImplementation"/>
        <NamedIndividual IRI="#Grep2.5.1RuleSyntax"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">net.strasnet.kids.detectorsyntaxproducers.KIDSGrepSyntax</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasSyntaxProductionImplementation"/>
        <NamedIndividual IRI="#bpfFilterSyntax"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">net.strasnet.kids.detectorsyntaxproducers.KIDSTcpDumpDetectorSyntax</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasSyntaxProductionImplementation"/>
        <NamedIndividual IRI="#broEventDetectionSyntax"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">net.strasnet.kids.detectorsyntaxproducers.BroEventDetectorSyntax</Literal>
    </DataPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasSyntaxProductionImplementation"/>
        <NamedIndividual IRI="#snortRuleSyntax3"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">net.strasnet.kids.detectorsyntaxproducers.KIDSSnortDetectorSyntax</Literal>
    </DataPropertyAssertion>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#canRepresent"/>
        <ObjectProperty abbreviatedIRI="owl:topObjectProperty"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#hasConstraint"/>
        <ObjectProperty abbreviatedIRI="owl:topObjectProperty"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#isContextOfSignalDomain"/>
        <ObjectProperty IRI="#isProviderOfResource"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#isDetectorFor"/>
        <ObjectProperty IRI="#compatibleWith"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#isEvaluatedBy"/>
        <ObjectProperty IRI="#isRepresentedInDataset"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#isEvaluationOf"/>
        <ObjectProperty IRI="#hasEventIncluded"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#isExposedIn"/>
        <ObjectProperty abbreviatedIRI="owl:topObjectProperty"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#isInContext"/>
        <ObjectProperty IRI="#isProvidedBy"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#requiresResource"/>
        <ObjectProperty IRI="#usesResource"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#supportCorrelationRelation"/>
        <ObjectProperty abbreviatedIRI="owl:topObjectProperty"/>
    </SubObjectPropertyOf>
    <InverseObjectProperties>
        <ObjectProperty IRI="#SignalInManifestation"/>
        <ObjectProperty IRI="#SignalManifestationIncludesSignal"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#existsInView"/>
        <ObjectProperty IRI="#bringsIntoExistence"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#canApplySignal"/>
        <ObjectProperty IRI="#isAppliedByDetector"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#canApplySignalValue"/>
        <ObjectProperty IRI="#isUsableByDetectorSyntax"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#canDetectEvent"/>
        <ObjectProperty IRI="#isDetectedByIDS"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#canMonitor"/>
        <ObjectProperty IRI="#isMonitoredBy"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isExpressibleInSyntax"/>
        <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isVisibleToDetector"/>
        <ObjectProperty IRI="#canSeeManifestation"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#coincidesWithDatasetLabel"/>
        <ObjectProperty IRI="#isLabelForTimePeriod"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#exposesContext"/>
        <ObjectProperty IRI="#isExposedIn"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#hasConstraint"/>
        <ObjectProperty IRI="#isConstraintOf"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isLabelerForDatasetView"/>
        <ObjectProperty IRI="#hasDatasetLabel"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isIncludedInIDS"/>
        <ObjectProperty IRI="#hasDetector"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isDomainOfSignal"/>
        <ObjectProperty IRI="#hasDomain"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isEncapsulatedInContext"/>
        <ObjectProperty IRI="#hasEncapsulatedContext"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isRepresentedInDataset"/>
        <ObjectProperty IRI="#hasEventIncluded"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isIncludedInIRS"/>
        <ObjectProperty IRI="#hasResponse"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isValueOfSignal"/>
        <ObjectProperty IRI="#hasSignalValue"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#representsDetector"/>
        <ObjectProperty IRI="#hasSyntax"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#includesTimePeriod"/>
        <ObjectProperty IRI="#isIncludedInDataset"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isRepresentableBy"/>
        <ObjectProperty IRI="#isAbleToRepresent"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isAffectedBy"/>
        <ObjectProperty IRI="#isResponseFor"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isEvaluableWithDataset"/>
        <ObjectProperty IRI="#isCompatibleDatasetForSignal"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isContainedIn"/>
        <ObjectProperty IRI="#isContainerOf"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isContextOfSignalDomain"/>
        <ObjectProperty IRI="#isInContext"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isDetectedBy"/>
        <ObjectProperty IRI="#isDetectorFor"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isEvaluatedBy"/>
        <ObjectProperty IRI="#isEvaluationOf"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isEventIdentifierFor"/>
        <ObjectProperty IRI="#isIdentifiedByDetector"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isIncludedInLabel"/>
        <ObjectProperty IRI="#isLabelForEvent"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#realizesSignalRepresentation"/>
        <ObjectProperty IRI="#isManifestedBy"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isMitigatedByIRS"/>
        <ObjectProperty IRI="#respondsTo"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isProducerOf"/>
        <ObjectProperty IRI="#isProducedBy"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isProducedByContext"/>
        <ObjectProperty IRI="#producesRepresentation"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isProvidedBy"/>
        <ObjectProperty IRI="#isProviderOfResource"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isRepresentationOfSignal"/>
        <ObjectProperty IRI="#isRepresentedBy"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isSupportedByDatasetView"/>
        <ObjectProperty IRI="#supportCorrelationRelation"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#providesViewOf"/>
        <ObjectProperty IRI="#isViewableAs"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#providesResource"/>
        <ObjectProperty IRI="#providedByDatasetView"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#relationUsesResource"/>
        <ObjectProperty IRI="#usedByCorrelationRelation"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#usedByResponse"/>
        <ObjectProperty IRI="#usesResource"/>
    </InverseObjectProperties>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#hasConstraint"/>
    </FunctionalObjectProperty>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#hasDomain"/>
    </FunctionalObjectProperty>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#isLabelForTimePeriod"/>
    </FunctionalObjectProperty>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#isProducedByContext"/>
    </FunctionalObjectProperty>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
    </FunctionalObjectProperty>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#providesViewOf"/>
    </FunctionalObjectProperty>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#realizesSignalRepresentation"/>
    </FunctionalObjectProperty>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#relationUsesResource"/>
    </FunctionalObjectProperty>
    <InverseFunctionalObjectProperty>
        <ObjectProperty IRI="#coincidesWithDatasetLabel"/>
    </InverseFunctionalObjectProperty>
    <InverseFunctionalObjectProperty>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
    </InverseFunctionalObjectProperty>
    <InverseFunctionalObjectProperty>
        <ObjectProperty IRI="#isDomainOfSignal"/>
    </InverseFunctionalObjectProperty>
    <InverseFunctionalObjectProperty>
        <ObjectProperty IRI="#isManifestedBy"/>
    </InverseFunctionalObjectProperty>
    <InverseFunctionalObjectProperty>
        <ObjectProperty IRI="#producesRepresentation"/>
    </InverseFunctionalObjectProperty>
    <InverseFunctionalObjectProperty>
        <ObjectProperty IRI="#usedByCorrelationRelation"/>
    </InverseFunctionalObjectProperty>
    <TransitiveObjectProperty>
        <ObjectProperty IRI="#hasEncapsulatedContext"/>
    </TransitiveObjectProperty>
    <TransitiveObjectProperty>
        <ObjectProperty IRI="#isEncapsulatedInContext"/>
    </TransitiveObjectProperty>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#canApplySignal"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#canDetectEvent"/>
        <Class IRI="#IDS"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#canMonitor"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#canRepresent"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
        <Class IRI="#DetectorSyntax"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#canSeeManifestation"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#compatibleWith"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#existsInView"/>
        <Class IRI="#SignalManifestation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasConstraint"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasDatasetLabel"/>
        <Class IRI="#DatasetView"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasDetector"/>
        <Class IRI="#IDS"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasDomain"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasEncapsulatedContext"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasResponse"/>
        <Class IRI="#IRS"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
        <Class IRI="#SignalDomain"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasSignalValue"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasSyntax"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#includesTimePeriod"/>
        <Class IRI="#Dataset"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isAffectedBy"/>
        <Class IRI="#Event"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isCompatibleDatasetForSignal"/>
        <Class IRI="#Dataset"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isContainerOf"/>
        <Class IRI="#Dataset"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isContextOfSignalDomain"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isDetectedBy"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isDomainOfSignal"/>
        <Class IRI="#SignalDomain"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isEncapsulatedInContext"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isEvaluationOf"/>
        <Class IRI="#Dataset"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isEventIdentifierFor"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isExposedIn"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isIdentifiedByDetector"/>
        <Class IRI="#Event"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isInContext"/>
        <Class IRI="#SignalDomain"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isIncludedInIDS"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isIncludedInIRS"/>
        <Class IRI="#Response"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isLabelForEvent"/>
        <Class IRI="#DatasetLabel"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isLabelForTimePeriod"/>
        <Class IRI="#DatasetLabel"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isManifestedBy"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isMitigatedByIRS"/>
        <Class IRI="#Event"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isProducedBy"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isProducedByContext"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isProducerOf"/>
        <Class IRI="#Event"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isProvidedBy"/>
        <Class IRI="#Resource"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isProviderOfResource"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isRepresentableBy"/>
        <Class IRI="#SignalConstraint"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isRepresentedBy"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isRepresentedInDataset"/>
        <Class IRI="#Event"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isResponseFor"/>
        <Class IRI="#Response"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isUsableByDetectorSyntax"/>
        <Class IRI="#SignalValue"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isViewableAs"/>
        <Class IRI="#Dataset"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#providesResource"/>
        <Class IRI="#DatasetView"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#relationUsesResource"/>
        <Class IRI="#CorrelationRelation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#requiresResource"/>
        <Class IRI="#Response"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#respondsTo"/>
        <Class IRI="#IRS"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#supportCorrelationRelation"/>
        <Class IRI="#DatasetView"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#usedByResponse"/>
        <Class IRI="#Resource"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#usesResource"/>
        <Class IRI="#Response"/>
    </ObjectPropertyDomain>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#canApplySignal"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#canDetectEvent"/>
        <Class IRI="#Event"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#canMonitor"/>
        <Class IRI="#DatasetView"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#canRepresent"/>
        <Class IRI="#SignalConstraint"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#canSeeManifestation"/>
        <Class IRI="#SignalManifestation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#compatibleWith"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#existsInView"/>
        <Class IRI="#DatasetView"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasConstraint"/>
        <Class IRI="#SignalConstraint"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasDatasetLabel"/>
        <Class IRI="#DatasetLabel"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasDetector"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasDomain"/>
        <Class IRI="#SignalDomain"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasEncapsulatedContext"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasResponse"/>
        <Class IRI="#Response"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasSignalValue"/>
        <Class IRI="#SignalValue"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasSyntax"/>
        <Class IRI="#DetectorSyntax"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#includesTimePeriod"/>
        <Class IRI="#TimePeriod"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isAffectedBy"/>
        <Class IRI="#Response"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isCompatibleDatasetForSignal"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isContainerOf"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isContextOfSignalDomain"/>
        <Class IRI="#SignalDomain"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isDetectedBy"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isDomainOfSignal"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isEncapsulatedInContext"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isEvaluationOf"/>
        <Class IRI="#Event"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isEventIdentifierFor"/>
        <Class IRI="#Event"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isExposedIn"/>
        <Class IRI="#DatasetView"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isIdentifiedByDetector"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isInContext"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isIncludedInIDS"/>
        <Class IRI="#IDS"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isIncludedInIRS"/>
        <Class IRI="#IRS"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isLabelForEvent"/>
        <Class IRI="#Event"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isLabelForTimePeriod"/>
        <Class IRI="#TimePeriod"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isManifestedBy"/>
        <Class IRI="#SignalManifestation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isMitigatedByIRS"/>
        <Class IRI="#IRS"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isProducedBy"/>
        <Class IRI="#Event"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isProducedByContext"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isProducerOf"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isProvidedBy"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isProviderOfResource"/>
        <Class IRI="#Resource"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isRepresentableBy"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isRepresentedBy"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isRepresentedInDataset"/>
        <Class IRI="#Dataset"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isResponseFor"/>
        <Class IRI="#Event"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isUsableByDetectorSyntax"/>
        <Class IRI="#DetectorSyntax"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isViewableAs"/>
        <Class IRI="#DatasetView"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#providesResource"/>
        <Class IRI="#Resource"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#relationUsesResource"/>
        <Class IRI="#Resource"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#requiresResource"/>
        <Class IRI="#Resource"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#respondsTo"/>
        <Class IRI="#Event"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#supportCorrelationRelation"/>
        <Class IRI="#CorrelationRelation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#usedByResponse"/>
        <Class IRI="#Response"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#usesResource"/>
        <Class IRI="#Resource"/>
    </ObjectPropertyRange>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#bringsIntoExistence"/>
            <ObjectProperty IRI="#realizesSignalRepresentation"/>
            <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#providesResource"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#canSeeManifestation"/>
            <ObjectProperty IRI="#existsInView"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#canMonitor"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#hasDetector"/>
            <ObjectProperty IRI="#isEventIdentifierFor"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#canDetectEvent"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#hasDomain"/>
            <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#isRepresentedBy"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#hasDomain"/>
            <ObjectProperty IRI="#isInContext"/>
            <ObjectProperty IRI="#isContainedIn"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#isEvaluableWithDataset"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#hasSyntax"/>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#canApplySignal"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#hasSyntax"/>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <ObjectProperty IRI="#hasConstraint"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#canRepresent"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#isAffectedBy"/>
            <ObjectProperty IRI="#isIncludedInIRS"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#isMitigatedByIRS"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#isContainedIn"/>
            <ObjectProperty IRI="#isContextOfSignalDomain"/>
            <ObjectProperty IRI="#isDomainOfSignal"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#isCompatibleDatasetForSignal"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#isEncapsulatedInContext"/>
            <ObjectProperty IRI="#isProviderOfResource"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#isProviderOfResource"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#isRepresentedBy"/>
            <ObjectProperty IRI="#isManifestedBy"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#SignalInManifestation"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#isViewableAs"/>
            <ObjectProperty IRI="#hasDatasetLabel"/>
            <ObjectProperty IRI="#isLabelForTimePeriod"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#includesTimePeriod"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#providesResource"/>
            <ObjectProperty IRI="#usedByCorrelationRelation"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#supportCorrelationRelation"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#usesResource"/>
            <ObjectProperty IRI="#isProvidedBy"/>
            <ObjectProperty IRI="#isContextOfSignalDomain"/>
            <ObjectProperty IRI="#isDomainOfSignal"/>
            <ObjectProperty IRI="#isProducedBy"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#isResponseFor"/>
    </SubObjectPropertyOf>
    <FunctionalDataProperty>
        <DataProperty IRI="#datasetLocation"/>
    </FunctionalDataProperty>
    <FunctionalDataProperty>
        <DataProperty IRI="#detectorExecutionCommand"/>
    </FunctionalDataProperty>
    <FunctionalDataProperty>
        <DataProperty IRI="#hasLabelDataLocation"/>
    </FunctionalDataProperty>
    <FunctionalDataProperty>
        <DataProperty IRI="#hasValue"/>
    </FunctionalDataProperty>
    <FunctionalDataProperty>
        <DataProperty IRI="#signalConstraintImplementation"/>
    </FunctionalDataProperty>
    <FunctionalDataProperty>
        <DataProperty IRI="#viewProductionImplementation"/>
    </FunctionalDataProperty>
    <DataPropertyDomain>
        <DataProperty IRI="#datasetLocation"/>
        <Class IRI="#Dataset"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#datasetParserImplementation"/>
        <Class IRI="#Dataset"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#detectorExecutionCommand"/>
        <Class IRI="#Detector"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#hasImplementationClass"/>
        <Class IRI="#Detector"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#hasLabelDataLocation"/>
        <Class IRI="#DatasetLabel"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#hasLabelFunction"/>
        <Class IRI="#DatasetLabel"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#hasSyntaxProductionImplementation"/>
        <Class IRI="#DetectorSyntax"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#hasValue"/>
        <Class IRI="#SignalValue"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#signalConstraintImplementation"/>
        <Class IRI="#SignalConstraint"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#viewProductionImplementation"/>
        <Class IRI="#DatasetView"/>
    </DataPropertyDomain>
    <DataPropertyRange>
        <DataProperty IRI="#hasValue"/>
        <Datatype abbreviatedIRI="xsd:string"/>
    </DataPropertyRange>
    <DLSafeRule>
        <Body>
            <ObjectPropertyAtom>
                <ObjectProperty IRI="#hasDomain"/>
                <Variable IRI="urn:swrl#s"/>
                <Variable IRI="urn:swrl#d"/>
            </ObjectPropertyAtom>
            <ObjectPropertyAtom>
                <ObjectProperty IRI="#isContainedIn"/>
                <Variable IRI="urn:swrl#c"/>
                <Variable IRI="urn:swrl#D"/>
            </ObjectPropertyAtom>
            <ObjectPropertyAtom>
                <ObjectProperty IRI="#isInContext"/>
                <Variable IRI="urn:swrl#d"/>
                <Variable IRI="urn:swrl#c"/>
            </ObjectPropertyAtom>
            <ObjectPropertyAtom>
                <ObjectProperty IRI="#isProducerOf"/>
                <Variable IRI="urn:swrl#e"/>
                <Variable IRI="urn:swrl#s"/>
            </ObjectPropertyAtom>
        </Body>
        <Head>
            <ObjectPropertyAtom>
                <ObjectProperty IRI="#isEvaluationOf"/>
                <Variable IRI="urn:swrl#D"/>
                <Variable IRI="urn:swrl#e"/>
            </ObjectPropertyAtom>
        </Head>
    </DLSafeRule>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#BroEventDetectionSyntax</IRI>
        <Literal datatypeIRI="&xsd;string">Indicates that the given syntax producer yields valid &apos;Bro&apos; files.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ByteHexDelimitedValue</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This value type is of the form &apos;|AABBCCDD EEFF1122 ... 33445566|&apos; the string can be of arbitrary length, delimited by vertical bars.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#ByteSubsequenceMatch</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Represents a subsequence match for a string of bytes.  This constraint requires a byte sequence to be specified, and a range of value locations to search within the context.  For example, the form may be: &quot;[|AAABBBCC XXXYYYZZ|,0,64]&quot; indicating a match if that subsequence of 8 bytes is found anywhere starting from byte 0 through byte 64.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#CorrelationRelation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">This class identifies individuals that apply a function to a signal context resource.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#CorrelationRelation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">CorrelationRelation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#DDOSAttackMaliciousActivityEvent</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">An automated distributed denial of service attack (e.g. a Smurf attack).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Dataset</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A collection of contexts, all of the same type, used for IDRS evaluation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#Dataset</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Dataset</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#DatasetLabel</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">A DatasetLabel is a function mapping each data instance in a dataset to an Event identifier (if that Event produced a signal in that instance), or a special value for &quot;No Event&quot;, indicating that no event signals are present in that instance.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#DatasetLabel</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DatasetLabel</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#DatasetView</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A DatasetView is an extraction of Contexts from a specific Dataset.  Examples may include:
* Packets from a LibPcap dataset
* Second-long aggregations of packets from a LibPcap dataset
* Minute-long aggregations of log records from a Syslog dataset

The DatasetView is related to Detectors by the ability of the detector to construct such a view.

The DatasetView is a &apos;glue&apos; class, allowing properties to be related to a specific representation of a context within a dataset.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#DatasetView</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DatasetView</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Detector</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A Detector is an implementation of a set of signals intended to identify an Event.  Examples include:
* A Snort signature
* A Bro policy
* A Splunk alert condition

== Classes vs Instances ==
Subclasses of detector are currently unusued. 

A detector instance is related to the set of signals it includes by the relation isDetectorFor (~ isDetectedBy).  In order to actually manifest a detector, the set of signals must be mapped to a set of IDSes which can represent those signals.  This is done by following the chain of relations from signals to languages (isRepresentationLanguageOf) to syntactic forms (hasSyntacticForm) to IDSes (hasSyntacticForm).  The intersection with the signalDomain the signal is from will determine if an IDS can instantiate a signal or not.

E.g. Snort implements a rule-based syntactic form which is able to represent features from a variety of languages.  For instance, an four-byte range set can represented for source and destination of an IP packet, a byte-match range set can be expressed for both source and destination port, and a regular language can be expressed as a packet content match.  Thus, a detector which employs a substring match on packet data, e.g. to identify a specific URI request in an HTTP packet, can be manifested (at least in part) by the Snort IDS.

=== Subclassing ===
To create a new subclass of Detector, a rule needs to be created indicating the classes of signal this detector is able to represent.  This rule will require an instance for each signal domain representable by this subclass as well as a subclass of SignalCanonicalRepresentation for each canonical form this detector can represent.

=== Instantiating ===
To instantiate a Detector, the following must also be indicated:
* At least one value for the object property hasSyntacticForm to enable generation of the detector.
* At least one (possibly anonymous) instance of an IDS which employs this detector
* At least one signal included in the detector</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#Detector</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Detector</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#DetectorSyntax</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A detector syntax is a specific specification of a detector.  An example would be a snort rule, or a splunk query.  The syntax determines the types of constraints which a detector can apply to a signal domain.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#DetectorSyntax</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DetectorSyntax</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Event</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">An Event is any change in the security posture of a system (where a system is a collection of components which need to be monitored).  Events are observable if they produce at least one signal (e.g. a worm propagation attempt).  Otherwise, they are not observable (e.g. a shoulder surfing attack).

== Class vs Instance ==
A class of event describes characteristics related to intent and objective.  For instance, a malicious activity event, or a component failure event.  These classes are not &quot;defined&quot; classes, rather they are specified manually for an event, and an event can only be assigned to one class.  

Event instances are specific events in the model sense.  That is, they are a category of event (e.g. CodeRed propagation attempt), rather than a manifestation of an event (e.g. an actual CodeRed propagation in &quot;the wild&quot;).  In addition to being related to a set of signals via the isProducerOf relation, some inferred relations associate events with:
* [D] isAffectedBy - The responses which are effective .
* [D] isIdentifiedByDetector - The Detectors which are able to identify this event (again, this is a defined class; it should not be specified manually).
* isIdentifiedByFingerprint - The Fingerprint which uniquely specifies this event.
* [D] isMitigatedByIRS - The set of IRSes which contain respones effective against this event.

(Note: [D] signifies a defined relation; it need not be specified manually; in fact, it *should* not)

=== Subclassing ===
To define a new subclass of event, the intent and objective of the event should be represented in the new subclass name.  

=== Instantiating ===
To instantiate a class of event, the instance should indicate at least one signal it produces.  If not, an anonymous signal will be inferred through the class definition (things which produce some signal).

An effort should be made to subclass the event according to intent or objective.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#Event</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Event</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#HTTPGetRequestParameter_StringMatch</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">String match on HTTPGetRequest.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#IDS</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">An Intrusion Detection System (IDS) is a collection of detectors associated with a runtime executable which can apply the detectors to a dataset.

== Class vs. Instance ==

Subclasses of IDS indicate the &quot;brand&quot; or &quot;family&quot; of ids.  For instance, a Snort IDS, a Bro IDS.

Classes of IDS have properties such as an associated EventSyntacticForm, and a set of compatible Detectors (e.g. Snort signatures).  

An instance of an IDS represents a specific IDS implementation / deployment.  This includes, for instance, the SnortIDS deployed at site X, running a defined set of specific rules.

=== Subclassing ===

A new subclass of IDS should indicate, as an equivalent class, the Event syntactic forms supported by instances of the new subclass.

=== Instantiating ===

An instance of an IDS should indicate the syntactic forms it supports (possibly through assignment to an appropriate subclass) as well as any detectors it explicitly includes.

</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#IDS</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">IDS</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#IISEventLogMessageContext_HTTPGetParameterRepresentation1</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates a text-string representation of the GET Parameters, escaped as defined in the default IIS output log format.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#IPAddressRangeSet</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The canonical form for the IPAddressRangeSet family of representations is:
[10.0.0.1/255.255.255.0, 10.0.1.1/255.255.255.0, ...]</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#IPAddressRangeSetValue</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">This value class represents a set of IP address ranges, and is the most versatile of IPv4 representations.  The syntax for values in this class is:

[v1:v2,v3:v4,...,vm:vn]

Where each &apos;:&apos; delimits the start and end points of a range (inclusive), and each &apos;,&apos; delimits distinct ranges.

Each value, vi, should be in dotted quad form (for Integer range sets, see the IntegerRangeSetValue class).  An example is:

[127.0.0.0:127.0.0.127,127.0.0.129:255.255.255.255]</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#IPPacket_IPPacketProtocolRepresentation1</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates a numeric protocol identifier in base-10.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#IRS</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">An intrusion response system (IRS) is a collection of responses.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#IRS</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">IRS</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Resource</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A resource is an input to a response which is associated with at least one context.  Examples include the source IP address in an IP Packet context, or the process ID in a host audit log.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#Resource</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Resource</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Response</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A response is any action which can be taken in a system.  Typically, responses are intended to disrupt, mitigate the effects of, or recover from an Event.  Responses require Resources, pieces of information about the system, in order ot be effective.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#Response</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Response</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Signal</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A signal is an observable byproduct of an event.  Examples include:
* Destination port == 80
* Source IP in range 10.0.0.0/8
* Number of processes spawned &gt; 10
* Day of week == Tuesday

== Class vs. Instance ==

Subclasses of Signal indicate the combined domain+signalCanonicalRepresentation which a signal is defined over.  Subclasses are associated with the syntactic forms able to represent them via rules.  

Instances of Signal are specific values, defined in terms of the canonical represention, and applied to a specific domain.  For example, a specific IP address as a source address.

=== Subclassing ===

Subclasses of signal should ideally follow the naming convention Feature_Representation.  Regardless of naming convention, however, each new subclass should be a defined class where membership is equivalent to membership in isValueInSignalDomain value X and hasCanonicalRepresentation some Y.  In this case, X is the domain being restricted, and Y is a class of canonical forms which can specify this signal.

Thus, a new subclass must be accompanied by a suitable instance of SignalDomain, as well as a subclass of SignalCanonicalRepresentation.

=== Instantiating ===
An instance of Signal must be placed in an appropriate subclass either explicitly, or by inference.

If by inference, then the new instance must indicate the signal domain to which it is applied (this domain instance must exist, or be created), and the canonical representation it uses (again, an instance must exist or be created).  If this combination is not equivalent to a current named subclass of Signal, then such a subclass should be created.  
</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#Signal</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signal</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SignalConstraint</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The canonical represention indicates the language of a signal.  As a signal is simply a constraint on a feature value, the language that constraint is represented in may vary.  A range of integer values, a regular expression, or a threshold over a statistical model are all examples of languages which a signal can be expressed in.

== Class vs. Instance ==

Subclasses of SignalCanonicalRepresentation represent groups of distinct representation languages and the alphabets they employ.  For instance, ByteRangeSet indicates an alphabet of single Bytes, with a language consisting of sets of ranges.  

A heirarchy of subclasses should be maintained so that, e.g., a single byte match is a subclass of range of bytes, which is a subclass of a set of bytes, which is a subclass of a set of ranges of bytes.  In this way, more general representations are described accurately as being able to cover more restricted ones.

Instances are assigned to a class of representation and are associated with a specific implementation of the representation.  This implementation is a java class which implements the interface &lt;specify here&gt;.  This class can read and produce the canonical representation as well as perform transformations into more common syntactic forms via the signalCanonicalRepresentationImplementation data property.

=== Subclassing ===

Creating a new subclass of Signal Canonical Representation requires first determining if the new subclass is a specialization of an existing subclass.  Classes are defined by datatype (alphabet) coupled with expression complexity (language).

For instance, a RealValueMatch representation is a specialization of a RealRangeSet, so it should be a subclass under (possibly a successor of) RealRangeSet.  On the other hand, ImaginaryInequality is not as it specifies a new data type, so it must be specified at the top level.

=== Instantiating ===

An instance of a canonical representation must specify the data object property signalCanonicalRepresentationImplementation with a value corresponding to the java class (on the current classpath) which implements the representation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#SignalConstraint</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalConstraint</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SignalDomain</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A signal domain is a feature, for instance, packet size.   This indicates the domain in which a signal (e.g. abnormally large packets) can be applied.

== Class vs. Instance ==

A class of signal domain is currently not used.

An instance of a signal domain is a specific feature over which a signal can be applied.  For instance, a sourceIPAddress, or a normalModelOfTransmittedPacketCounts.  These instances are related to contexts that they can occur in (hasSignalDomainContext), as well as the signals defined over them (isDomainOfSignal). 

=== Subclassing ===

A subclass of SignalDomain is currently unrestricted.

=== Instantiating ===

An instance of a signal domain is unrestricted.  </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#SignalDomain</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomain</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SignalDomainContext</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The signal domain context is the context in which a signal domain is defined.  For instance, packet size is a signal domain which can only occur in the context of a network packet.  Another example is network session duration, which occurs in the context of a network session.

The context determines which data sources can provide data for assessing a detector.   If network sessions are the context, we need session-based data, e.g. NetFlow.  If packets are, we need PCAPs.

== Class vs. Instance ==
Classes of signal domain context may indicate the general &quot;unit&quot; of a context, e.g.,  network packet contexts, or statistical distribution contexts.

A context instance is a specific context type, e.g. an IP packet.  Note that this is *not* necessarily a specific instance of an ip packet, rather it is a specific type of context within a larger class of contexts (e.g. network packets).

=== Subclassing ===
A new subclass of signal domain context must include as a definition (equivalence class) the conjunction of things which &quot;isContextOfSignalDomain&quot; all signal domains which are known to occur in this context.

=== Instantiating ===
An instance of a context is a particular manifestation of a class of contexts.  In addition to the signal domains which are known to occur in all contexts of its class, an instance may specify additional domains which happen to be present in it.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#SignalDomainContext</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomainContext</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SignalDomainRepresentation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">A signal domain representation is another &quot;glue&quot; class which provides a target for relations with a domain or range of a particular representation of a domain within a signal context.  An example would be a source IP address within an IP Packet.

The representation is used, for instance, to relate the source IP address associated with an IP Packet, as distinct from the source IP address associated with a netflow record (which would be a separate representation).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#SignalDomainRepresentation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomainRepresentation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SignalInManifestation</IRI>
        <Literal datatypeIRI="&xsd;string">Indicates that a signal is manifested by the given manifestation.  That is, it is the signal represented in the representation which is manifested by this manifestation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#SignalInManifestation</IRI>
        <Literal datatypeIRI="&xsd;string">Signal Is Manifested By Signal Manifestation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SignalManifestation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">A signal manifestation associates a SignalDomainRepresentation with a DatasetView, 
and represents a particular concrete instance of a signal domain within a particular dataset view.  An example would be the SIPAddress representation within a LibPCAP file, as output by tcpdump -a (e.g. a dotted-quad IP address).

In this case, the view would be the ascii output produced by tcpdump -a, and the representation would be the dotted-quad IP address associated with an IP packet.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#SignalManifestation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalManifestation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SignalManifestationIncludesSignal</IRI>
        <Literal datatypeIRI="&xsd;string">Indicates that the manifestation manifests the supplied signal.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#SignalManifestationIncludesSignal</IRI>
        <Literal datatypeIRI="&xsd;string">Signal Manifestation is Manifestation of Signal</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SignalValue</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signal Values are represented as individuals so that they can be classed according to type and associated with syntaxes able to consume them.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#SignalValue</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalValue</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SingleBitMaskMatchNonZero</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates a mask for a single bit in a byte.  Value format is 0xHH, e.g. 0x01 for the right-most bit.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TCPFlags_SingleBitmaskNonZero</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">TCP Flags consist of six possible bits.  A single bitmask non-zero indicates that a single bit can be specified as needing to be present in that mask.  

The format is a hex value:

0x01 - FIN
0x02 - SYN
0x04 - RST
0x08 - PSH
0x10 - ACK
0x20 - URG</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TCPFlags_SnortFlagsExpressionMatch</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral"> * In Snort, only the following types of flag specifications can be represented:
 *  - Specified bits on, the rest must be off. (e.g. &quot;flags: SF&quot;)
 *  - Specified bits on, the rest can be on or off. (e.g. &quot;flags: +SF&quot;)
 *  - At least one specified bit on, the rest must be off (e.g. &quot;flags: *SF&quot;)
 *  - Specified bits off, the rest can be on or off. (e.g. flags: !SF&quot;)
 *  
 *  Specifically, the following *cannot* be represented:
 *  - One specified bit on, a second off, and rest can be on or off.
 *  - Two specified bits are on, while at least one of three other bits are on.
 *  
 *  Thus, as long as only 2 of the three possible bit mask values are specified (0 for must be off,
 *  1 for must be on, -n for one of the flags on, and * for either on or off), Snort can represent it.  The following approach is used to produce
 *  a valid Snort rule:
 *   - If the match consists of 0 or more &apos;0&apos; and the rest &apos;1&apos; values, the option is produced with no modifiers.
 *   - If the match consists only of (at least one) &apos;*&apos; and &apos;1&apos; values, the option is produced with the &apos;+&apos; modifier.
 *   - If the match consists only of (at least one) &apos;0&apos; and &apos;*&apos; values, the option is produced with the &apos;!&apos; modifier.
 *   - If the match consists only of (at least one) &apos;*&apos; and &apos;-n&apos; values with only one value for &apos;n&apos;, the option is produced with the &apos;*&apos; modifier.
 *   - If the match is entirely &apos;0&apos; values, the option uses the Snort &apos;0&apos; flag specifier (e.g. flags: 0).
 *   - If the match is entirely &apos;*&apos; values, then there is no signal.
 *   - Otherwise, Snort cannot represent this signal in a single rule.
 *
 */</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TCPPacket_TCPDestinationPortNumberRepresentation</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Binds the TCPPacket context and TCP Destination Port Number domain together.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TimePeriod</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">A TimePeriod represents an interval over which a DatasetLabel is provided.  Datasets can include multiple TimePeriods, but each DatasetLabel must be associated with only one TimePeriod - the entire duration of the considered labels.

Dataset Labels with the same TimePeriod can be evaluated as part of the same multi-dataset IDS assessment.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#TimePeriod</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">TimePeriod</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#bringsIntoExistence</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the object (a signal manifestation) is brought into existence, or realized, by the named dataset view.  For example, the manifestation of a tcp destination port number as an integer is realized by an ascii view of a libpcap file.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#bringsIntoExistence</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DatasetView Brings SignalManifestation Into Existence</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#broEventDetectionSyntax</IRI>
        <Literal datatypeIRI="&xsd;string">This syntax works by having predefined bro scripts which implement specific constraint / domain pairs.  The constraints are functions implemented in Bro, and described here.  The domains are extracted from the specific contexts within the bro language, where contexts are generally associated with Bro &apos;events&apos;, i.e. &apos;IPPacketReceived&apos;.

Care must be taken that the output produced is compatible with the label function being used with the detector.

An example script produced by this syntax might be:

--
@load kids/broIDSMethods

export {
    const stddev_threshold: double = 2 &amp;redef;
}

event kids_constraint_satisfied (c: connection , l: vector of string , msg: string ) 
{
    local d = &quot;&quot;;
    local s: int ;
    local b = &quot;&quot; ;
    for (s in l)
    {
        b = b + fmt(&quot;%s%s&quot;,d,l[s]);
        d = &quot;,&quot;;
    }
    print b ;
}
--

In this case the functionality is provided by the broIDSMethods module in bro, and the desired event (kids_constraint_satisfied) is overridden to produce label-compatible output.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#canApplySignal</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Relates a detector to the signals it is able to apply, that is, the signals it is able to represent with its syntax.  True when it can apply a given constraint language to a given signal domain.

This propery is established through the property chain hasSyntax o canRepresentFeatureWithConstraint</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#canApplySignal</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Detector Can Apply Signal</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#canApplySignalValue</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that a detector syntax is able to represent a signal value.  For example, when representing TCP Flags signal values, a detector may be able to use a bitstring (e.g. &quot;010010&quot;), but not an ASCII character specification (e.g. &quot;SA&quot;).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#canApplySignalValue</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DetectorSyntax Can Apply SignalValue</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#canDetectEvent</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">A property defined by a property chain which indicates that the specified IDS is able to detect the given Event.  An IDS can detect an event if it contains a Detector which is an identifier for the Event.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#canDetectEvent</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">IDS Can Detect Event</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#canMonitor</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that a detector can monitor a specific view of a dataset.  A view might be the ascii dump (via tcpdump) of a libpcap file, for instance.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#canMonitor</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Detector Can Monitor DatasetView</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#canRepresent</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">No longer needed?</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#canRepresentFeatureWithConstraint</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the detector syntax is able to represent the signal domain / constraint combination.  For example, a snort rule is able to apply regular expression constraints to the HTTP URI Request String feature.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#canRepresentFeatureWithConstraint</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DetectorSyntax Can Represent Feature With Constraint Signal</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#canSeeManifestation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a detector with the signal manifestations it can &quot;see&quot;, that is, those it is able to both extract from a view, and parse the representation of.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#canSeeManifestation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Detector Can See SignalManifestation </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#coincidesWithDatasetLabel</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">The inverse property to the label -&gt; time period mapping.  Indicates that the TimePeriod is the time interval this dataset label covers.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#coincidesWithDatasetLabel</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">TimePeriod Coincides With DatasetLabel</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#compatibleWith</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">No longer needed?

Indicates that the given detector is capable of detecting a signal, but may or may not actually detect that signal.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#datasetParserImplementation</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">datasetParserImplementation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#existsInView</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates the manifestation of a signal with the view in which it is manifested.  For example, the integer form of a destination tcp port is manifested in an ascii dump of a libpcap file.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#existsInView</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalManifestation Exists In View DatasetView</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#exposesContext</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a dataset view with the signal contexts is exposes.  For example, a libpcap file contains full packet data, but an ascii tcpdump output view may not expose all nested contexts. </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#exposesContext</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DatasetView Exposes SignalDomainContext</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasConstraint</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Ties a signal to its constraint language.  For example, looking for the regular expression &apos;/^.*default.ida\?/&apos; has a regular expression constraint language, and the specified value.  </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#hasConstraint</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signal Has Constrataint SignalConstraint</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasCorrelationRelationImplementation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Identifies the Java class which implements this correlation relation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#hasCorrelationRelationImplementation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">hasCorrelationRelationImplementation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasDatasetLabel</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Relates a DatasetLabel specification to a DatasetView.  A DatasetView must have a corresponding label file in order to be used for evaluation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#hasDatasetLabel</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DatasetView Has DatasetLabel</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasDetector</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Indicates that the IDS includes the named detector.  For instance, a Snort individual may include some set of Snort Rule detectors.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#hasDetector</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">IDS Has Detector</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasDomain</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Relates signals to the value domains they are observed in.  </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#hasDomain</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signal Has SignalDomain</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasEncapsulatedContext</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">This transitive property allows inference on embedded contexts, allowing one to determine, e.g.  that a TCP packet over IP has a source and destination IP address.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#hasEncapsulatedContext</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomainContext Has Encapsulated SignalDomainContext</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasEventIncluded</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the Dataset includes data elements containing signals produced by Event.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#hasEventIncluded</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Dataset Has Event Included</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasResponse</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Supports inference on the IRS coverage based on the responses it incorporates.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#hasResponse</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">IRS Has Response</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasSignalDomainRepresentation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Relates the signal domain to a concept of its representation.  For example, the source IP address in a network packet can be represented in a number of ways:
* Dotted-quad ascii digits (&quot;127.0.0.1&quot;)
* Hexadecimal Bytes
* Native LibPCAP form
* Integer
etc...</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasSignalDomainRepresentation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomain Has SignalDomainRepresentation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasSignalValue</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a Signal with its SignalValue concept.  This should probably be functional (?)</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#hasSignalValue</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signal Has Signal Value</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasSyntax</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that a detector uses a given syntax; this determines the types of signals and domain representations a detector can monitor.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#hasSyntax</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Detector Has Syntax DetectorSyntax</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasValue</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The canonical signal value is the value of the signal given in the defined &quot;canonical&quot; form.  The form is defined by the representation language associated with the signal.  For instance, a regular-expression signal is represented as a list of edges with a defined start and final node.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#includesTimePeriod</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a Dataset with the time periods it includes.  A Dataset may include multiple time periods, and a time period may be included in multiple datasets.  Additionally, each DatasetLabel associated with a view of a Dataset *must* indicate a TimePeriod which this Dataset includes.  Thus, this can be inferred from that relation structure.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#includesTimePeriod</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Dataset Includes Time Period</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#instanceTimestamp</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Time the instance occurred.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#integerRangeSet</IRI>
        <Literal datatypeIRI="&xsd;string">The integerRangeSet has the canonical format [begin:end,b2:e2,...], where each pair of values separated by a &apos;:&apos; is a pair of integers.  It also guarantees that each b* &lt;= e*.

Note that ranges are inclusive on both ends.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isAbleToRepresent</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signifies that a particular syntactic form is able to represent a given signal.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isAbleToRepresent</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Detector Is Able To Represent SignalConstraint</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isAffectedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">This relation is normally inferred, and maps events to the responses that can affect them.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isAffectedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Event Is Affected By Response</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isAppliedByDetector</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a Signal with a Detector that is able to apply it.  For example, a detector may be able to process TCP packets from a libpcap file, but may not be able to apply a regular expression to the data part of the packet.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isAppliedByDetector</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signal Is Applied By Detector</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isCompatibleDatasetForSignal</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the associated dataset can be utilized to evaluate the signal.  More formally, that the signal is present in a domain which is available in a context that is contained in a dataset.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isCompatibleDatasetForSignal</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Dataset Is Compatible Dataset For Signal</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isConstraintOf</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the named constraint is a constraint of the given signal.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isConstraintOf</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalConstraint Is Constraint Of Signal</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isContainedIn</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates signal contexts with the datasets they are contained within.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isContainedIn</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomainContext Is Contained Within Dataset</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isContainerOf</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Related datasets to the contexts they contain.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isContainerOf</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Dataset Is Container Of SignalDomainContext</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isContextOfSignalDomain</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Relate signal domains to context they are observed in.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isContextOfSignalDomain</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomainContext Is Context Of SignalDomain</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isDetectedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">No longer needed?

Indicates that a signal is detected by a given detector.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isDetectedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signal Is Detected By Detector</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isDetectedByIDS</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">The inverse of this property is defined by a property chain.  This property indicates that an event is detected by an IDS, that is, the IDS contains a detector capable of detecting the event.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isDetectedByIDS</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Event Is Detected By IDS</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isDetectorFor</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">No longer needed?

Indicates that a detector can spot a given signal.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isDomainOfSignal</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Maps a signal domain to the signals defined on it.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isDomainOfSignal</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomain Is Domain Of Signal</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isEncapsulatedInContext</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Supports transitive inference on contexts which include this one.  For instance, inferring that a TCP packet is also an IP packet.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isEncapsulatedInContext</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomainContext Is Encapsulated In SignalDomainContext</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isEvaluableWithDataset</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the given Signal is evaluable with the dataset</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isEvaluableWithDataset</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signal Is Evaluable With Dataset</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isEvaluatedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that an Event is evaluted by a dataset, which means it not only produced signals present in the dataset, but it also is associated with a label file that identifies those instances related to the Event.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isEvaluatedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Event Is Evaluated In Dataset</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isEvaluationOf</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a dataset with the events it can be used to evaluate.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isEvaluationOf</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Dataset Is Evaluation Of Event</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isEventIdentifierFor</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">An inferred property indicated that a detector is able to identify an event.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isEventIdentifierFor</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Detector Is Event Identifier For Event</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isExposedIn</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the given SignalDomainContext is exposed in the named DatasetView.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isExposedIn</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomainContext Is Exposed In DatasetView</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isExpressibleInSyntax</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Captures the relation where the given signal is expressible in the named detector syntax.  That is, the semantics of the domain and constraint to apply it to are expressible with the semantics of the detector.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isExpressibleInSyntax</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signal (Feature With Constraint) Is Expressible In Syntax DetectorSyntax</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isIdentifiedByDetector</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">The isIdentifiedByDetector property indicates that a detector can identify a specific event instance.  This property holds when an event generates all of the signals included in the detector.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isIdentifiedByDetector</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Event Is Identified By Detector</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isInContext</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Specifies the domain context in which the signal occurs.  The domain context provides the resources which enable responses.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isInContext</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomain Is In SignalDomainContext</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isIncludedInDataset</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that a time period is included in the time interval over which the dataset was collected.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isIncludedInDataset</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">TimePeriod Is Included In Dataset</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isIncludedInIDS</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Maps detectors to the IDS(s) that include them.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isIncludedInIDS</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Detector Is Included In IDS</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isIncludedInIRS</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Maps responses to the IRS(s) that include them.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isIncludedInIRS</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Response Is Included In IRS</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isIncludedInLabel</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates events with the label functions that label them in various datasets.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isIncludedInLabel</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Event Is Included In DatasetLabel</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isLabelForEvent</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the label function includes the Event when labeling data instences.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isLabelForEvent</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DatasetLabel Is Label For Event</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isLabelForTimePeriod</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">This property indicates that the DatasetLabel coincides with the indicated time period.  The main purpose of this is to allow labels that share a time period to all be considered in the course of an IDS evaluation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isLabelForTimePeriod</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DatasetLabel Is Label For TimePeriod</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isLabelerForDatasetView</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the named resource (DatasetLabel) is a labeller for the given dataset view.  Should be functional (?).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isLabelerForDatasetView</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DatasetLabel Is Labeler For DatasetView</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isManifestedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a representation with the manifestations it is realized in.  Inverse functional.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isManifestedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomainRepresentation Is Manifested By SignalManifestation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isMitigatedByIRS</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">This inferred property indicates that an event is mitigated by an IRS, based on the responses the IRS includes and their ability to affect the Event.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isMitigatedByIRS</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Event Is Mitigated By IRS</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isMonitoredBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that a DatasetView is monitored by Detector.  A view might be the ascii dump (via tcpdump) of a libpcap file, for instance.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isMonitoredBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DatasetView Is Monitored By Detector</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isProducedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Relates signals to the events which generate them.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isProducedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signal Is Produced By Event</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isProducedByContext</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a SignalDomainRepresentation with the context that produces it.  

For example, a TCP source port can be produced by a TCP Packet. Functional, as the real intention is to provide a concept that joins a signal domain with the context it is present in.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isProducedByContext</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomainRepresentation Is Produced By SignalDomainContext</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isProducerOf</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Relates events to the signals they produce.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isProducerOf</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Event Is Producer Of Signal</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isProvidedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signal domain contexts provide additional resource which may not be a part of the signals of an event.  For instance, a CodeRed worm propagation attempt usually occurs in the context of an IP Packet, which provides resources such as source IP address and destination IP address.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isProvidedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Resource Is Provided By SignalDomainContext</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isProviderOfResource</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Maps signal contexts to the resources they provide.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isProviderOfResource</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomainContext Is Provider Of Resource</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isRepresentableBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">No longer needed?

Indicates that a signal can be represented by a particular syntactic form.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isRepresentableInDetectorSyntax</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">No longer used?</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isRepresentationOfSignal</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Relates a representation with the signal(s) defined on the domain that the representation associates with its context.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isRepresentationOfSignal</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalRepresentation Is Representation of Signal</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isRepresentationOfSignalDomain</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates which Signal Domain the Signal Domain Representation is representing.  This is functional as a single representation can apply to only one signal domain.  (Note however, that a signal domain can have many representations, so it is not inverse functional).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isRepresentationOfSignalDomain</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomainRepresentation Is Representation Of SignalDomain</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isRepresentedBy</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Relates a signal with the signal domain representations able to represent it.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isRepresentedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signal Is Represented By SignalRepresentation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isRepresentedInDataset</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the named Event is represented in the Dataset (i.e. has produced some signal in some instance within that dataset).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isRepresentedInDataset</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Event Is Represented In Dataset</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isResponseFor</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This relation indicates that a response has a set of required resources which overlaps the set of indicated resources by the signals an Event produces.  </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isResponseFor</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Response Is Response For Event</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isSupportedByDatasetView</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Relates CorrelationRelation instances to the DatasetViews they are supported by.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isSupportedByDatasetView</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">CorrelationRelation Is Supported By DatasetView</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isUsableByDetectorSyntax</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that a signal value can be represented by a detector syntax.  For example, when representing TCP Flags signal values, a detector may be able to use a bitstring (e.g. &quot;010010&quot;), but not an ASCII character specification (e.g. &quot;SA&quot;).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isUsableByDetectorSyntax</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalValue is Usable By DetectorSyntax</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isValueOfSignal</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the named signal value is a value of this signal.  A single value could potentially be associated with multiple signals, so this is not functional.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isValueOfSignal</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalValue Is Value Of Signal</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isViewableAs</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a Dataset with the Dataset Views it is able to be viewed as.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isViewableAs</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Dataset Is Viewable As DatasetView</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isVisibleToDetector</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the named SignalManifestation is visible to the given Detector.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#isVisibleToDetector</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalManifestation Is Visible To Detector</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#producesRepresentation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Identifies the SignalDomainContext which is referred to by the SignalDomainRepresentation.  Inverse functional since the purpose of this concept is to represent a pairing of SignalDomains and SignalDomainContexts.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#producesRepresentation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalDomainContext Produces SignalDomainRepresentation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#providedByDatasetView</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the given resource is provided by the associated Dataset View.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#providedByDatasetView</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Resource Is Provided By DatasetView</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#providesResource</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the given Dataset View can be used to produce the identified resource.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#providesResource</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DatasetView Provides Resource</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#providesViewOf</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that a DatasetView is associated with a Dataset.  This is Functional.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#providesViewOf</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DatasetView Provides View Of Dataset</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#realizesSignalRepresentation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a Manifestation with the SignalRepresentation it manifests (the Manifestation is a combined concept joining a SignalRepresentation and a DatasetView) </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#realizesSignalRepresentation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">SignalManifestation Realizes SignalDomainRepresentation </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#relationUsesResource</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Identifies the resource used by a correlation relation; used by the implementation to identify the resources to extract from a dataset when used in correlation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#relationUsesResource</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">CorrelationRelation Uses Resource</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#representsDetector</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a detector syntax with the detectors that use it.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#representsDetector</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DetectorSyntax Represents Detector</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#requiresResource</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Represents the resource(s) required for a response to operate.  If all resource requirements are met, the response is considered viable given the observed signals</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#requiresResource</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Response Requires Resource</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#respondsTo</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">An inferred property indicating that an IRS is able to mitigate an event.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#respondsTo</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">IRS Responds To Event</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#signalConstraintImplementation</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This datatype should specify a java class in the current classpath which can be instantiated via reflection to parse, verify, and produce the canonical representation it is associated with.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#supportCorrelationRelation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the dataset view will support the associated correlation relation, i.e. that it provides the resource required for the correlation relation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#supportCorrelationRelation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">DatasetView Supports Correlation Relation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#usedByCorrelationRelation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Identifies the relations which use this resource.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#usedByCorrelationRelation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Resource Used By Correlation Relation</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#usedByResponse</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Maps resources to the responses they are able to satisfy requirements for.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#usedByResponse</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Resource Used By Response</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#usesResource</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Represents the resource(s) a response is able to use (some may not be required, but can be used for more targeted responses when available).  If all resource requirements are met, the response is considered viable given the observed signals.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:label"/>
        <IRI>#usesResource</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Response Uses Resource</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <AbbreviatedIRI>owl:Thing</AbbreviatedIRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Everything is a &quot;Thing&quot;</Literal>
    </AnnotationAssertion>
</Ontology>



<!-- Generated by the OWL API (version 3.4.2) http://owlapi.sourceforge.net -->

