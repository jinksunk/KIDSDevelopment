<?xml version="1.0"?>


<!DOCTYPE Ontology [
    <!ENTITY xsd "http://www.w3.org/2001/XMLSchema#" >
    <!ENTITY xml "http://www.w3.org/XML/1998/namespace" >
    <!ENTITY rdfs "http://www.w3.org/2000/01/rdf-schema#" >
    <!ENTITY rdf "http://www.w3.org/1999/02/22-rdf-syntax-ns#" >
]>


<Ontology xmlns="http://www.w3.org/2002/07/owl#"
     xml:base="http://solomon.cs.iastate.edu/ontologies/KIDS.owl"
     xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
     xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
     xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
     xmlns:xml="http://www.w3.org/XML/1998/namespace"
     ontologyIRI="http://solomon.cs.iastate.edu/ontologies/KIDS.owl">
    <Prefix name="xsd" IRI="http://www.w3.org/2001/XMLSchema#"/>
    <Prefix name="owl" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="" IRI="http://www.w3.org/2002/07/owl#"/>
    <Prefix name="rdf" IRI="http://www.w3.org/1999/02/22-rdf-syntax-ns#"/>
    <Prefix name="rdfs" IRI="http://www.w3.org/2000/01/rdf-schema#"/>
    <Annotation>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">A signal oriented ontology to support KIDS (Knowledge-based IDS).
This is the &quot;master&quot; version; the definition of the classes and relations between them, but with no individuals.</Literal>
    </Annotation>
    <Declaration>
        <Class IRI="#ApplicationIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ApplicationResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ApplicationResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ApplicationSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#AttackMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#AutomatedAttackMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#BitMaskMatchNonZero"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ByteEquality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ByteRange"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ByteRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ByteSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#CodeRedWormPropagationEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ComponentFailureEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ContextFreeGrammar"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ContextSensitiveGrammar"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DDOSAttackMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DNSIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DNSProtocolResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DNSResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DNSSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Dataset"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DatasetLabel"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DatasetView"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Detector"/>
    </Declaration>
    <Declaration>
        <Class IRI="#DetectorSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Event"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPGetRequest"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPGetRequestParameter"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPPacketContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPProtocolResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HTTPSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HostIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HostResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HostResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#HostSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ICMPIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ICMPProtocolResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ICMPResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ICMPSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IDS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPAddressCountThreshold"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPAddressRange"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPAddressRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPAddressSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPAddressValue"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPDestinationAddress_IPRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketContext_SignalDomain"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketData"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketHeader"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacketTotalLength_IntegerGreaterThan"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPPacket_IPPacketProtocolNumberRepresentation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPProtocolNumber"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPProtocolNumberSignal_ByteRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPProtocolNumber_ByteEquality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPProtocolResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPSourceAddress_IPRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPSourceAddress_UniqueSourceIPAddressCountThreshold"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPv4Address"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPv4DestinationAddress"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IPv4SourceAddress"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IntegerEquality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IntegerGreaterThan"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IntegerInequality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IntegerLessThan"/>
    </Declaration>
    <Declaration>
        <Class IRI="#IntegerRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#LibPCAPDataset"/>
    </Declaration>
    <Declaration>
        <Class IRI="#LibPcap_IPPacketView"/>
    </Declaration>
    <Declaration>
        <Class IRI="#LibPcap_SecondOfPacketsView"/>
    </Declaration>
    <Declaration>
        <Class IRI="#LogAnalysisRuleSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#MaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ManualAttackMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetflowDataset"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetflowRuleSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkFlowDataset"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkFlowSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkPacketDataset"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkPacketSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#NetworkSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PCREGrammar"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketRate"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketRate_IntegerInequality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketView"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketsPerMinute"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketsPerMinutePort80"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketsPerMinutePort80SampledEachPacket"/>
    </Declaration>
    <Declaration>
        <Class IRI="#PacketsPerSecond"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RealInequality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RealRangeSet"/>
    </Declaration>
    <Declaration>
        <Class IRI="#ReconMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#RegularGrammar"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Resource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Response"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SecondOfPacketsSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#Signal"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SignalConstraint"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SignalDomain"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SignalDomainRepresentation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SignalManifestation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SingleBitMaskMatchNonZero"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SnortCompatibleIDS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SnortFlagsExpressionMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SnortRule"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SnortRuleSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#StringMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#SubstringMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPDestinationPort"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPDestinationPort_integerEquality"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPFlags_BitmaskNonZero"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPFlags_SnortFlagsExpressionMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPacketContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPacketPayload_StringMatch"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPacketSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPacket_IPPacketTotalLengthRepresentation"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPPort"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPProtocolResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TCPSourcePort"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TemporalSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#TemporalView"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UDPIRS"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UDPPacketContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UDPProtocolResponse"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UDPResource"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UDPSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UniqueDestinationIPAddressCountThreshold"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UniqueIPAddressCountThreshold"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UniqueSourceIPAddressCountThreshold"/>
    </Declaration>
    <Declaration>
        <Class IRI="#UserMasqueradeAttackMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#VirusAttackMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WindowsEventLogAnalysisRuleSyntax"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WindowsEventLogDataset"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WindowsEventLog_TextFileView"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WindowsLogAnalysis"/>
    </Declaration>
    <Declaration>
        <Class IRI="#WormAttackMaliciousActivityEvent"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#bringsIntoExistence"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#canApplySignal"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#canDetectEvent"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#canMonitor"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#canRepresent"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#canSeeManifestation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#compatibleWith"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#existsInView"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#exposesContext"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasConstraint"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasDatasetLabel"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasDetector"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasDomain"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasEncapsulatedContext"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasEventIncluded"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasResponse"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#hasSyntax"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isAbleToRepresent"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isAffectedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isAppliedByDetector"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isCompatibleDatasetForSignal"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isConstraintOf"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isContainedIn"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isContainerOf"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isContextOfSignalDomain"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isDetectedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isDetectedByIDS"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isDetectorFor"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isDomainOfSignal"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isEncapsulatedInContext"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isEvaluableWithDataset"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isEvaluatedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isEvaluationOf"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isEventIdentifierFor"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isExposedIn"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isExpressibleInSyntax"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isIdentifiedByDetector"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isInContext"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isIncludedInIDS"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isIncludedInIRS"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isIncludedInLabel"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isLabelForEvent"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isLabelerForDatasetView"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isManifestedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isMitigatedByIRS"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isMonitoredBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isProducedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isProducedByContext"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isProducerOf"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isProvidedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isProviderOfResource"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isRepresentableBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isRepresentableInDetectorSyntax"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isRepresentationOfSignal"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isRepresentedBy"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isRepresentedInDataset"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isResponseFor"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isViewableAs"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#isVisibleToDetector"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#producesRepresentation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#providesViewOf"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#realizesSignalRepresentation"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#representsDetector"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#requiresResource"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#respondsTo"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#usedByResponse"/>
    </Declaration>
    <Declaration>
        <ObjectProperty IRI="#usesResource"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#datasetLocation"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasImplementationClass"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasLabelDataLocation"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasLabelFunction"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasSyntaxProductionImplementation"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#hasValue"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#signalConstraintImplementation"/>
    </Declaration>
    <Declaration>
        <DataProperty IRI="#viewProductionImplementation"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#HTTPGetParameter"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#IPPacket_IPPacketProtocolRepresentation1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#PerlCompatibleRegularExpression"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPDestinationPort"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPFlags"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPPacket"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPPacketDataLength"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#TCPPacket_TCPPacketDataRepresentation1"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#UniqueDstIPPerSrcPerMin"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#WindowsLogEntry"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#bitmaskMatchNonZero"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#bpfFilterSyntax"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#byteAsIntegerEquality"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#destinationPortSet"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#dport80PacketsPerSecond"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#flowCount"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#hostFWBlock"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#integerEquality"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#integerGreaterThan"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#integerLessThan"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#ipPacketSignalDomainContext"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#ipProtocolNumber"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#secondSampleByPacket"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#servicePortNumber"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#snortFlagsExpressionMatch"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#snortRuleSyntax3"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#srcIPAddress"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#stringMatch"/>
    </Declaration>
    <Declaration>
        <NamedIndividual IRI="#uniqueIPThreshold"/>
    </Declaration>
    <EquivalentClasses>
        <Class IRI="#ApplicationIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#IRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#ApplicationResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#DNSIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#UDPIRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#DNSProtocolResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Dataset"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#isContainerOf"/>
            <Class IRI="#SignalDomainContext"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#Event"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#isProducerOf"/>
            <Class IRI="#Signal"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#HTTPIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#TCPIRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#HTTPProtocolResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#HostIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#IRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#HostResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#ICMPIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#IPIRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#ICMPProtocolResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IPIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#NetworkIRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#IPProtocolResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IPPacketContext_SignalDomain"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#isInContext"/>
            <Class IRI="#IPPacketSignalDomainContext"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#IPPacket_IPPacketProtocolNumberRepresentation"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#isProducedByContext"/>
                <Class IRI="#IPPacketSignalDomainContext"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
                <NamedIndividual IRI="#ipProtocolNumber"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#NetworkIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#IRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#NetworkResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#NetworkResponse"/>
        <ObjectIntersectionOf>
            <Class IRI="#Response"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#usesResource"/>
                <Class IRI="#NetworkResource"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#PacketRate_IntegerInequality"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasConstraint"/>
                <Class IRI="#IntegerInequality"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasDomain"/>
                <Class IRI="#PacketRate"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#PacketsPerSecond"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#isInContext"/>
            <Class IRI="#SecondOfPacketsSignalDomainContext"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#SnortRule"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasSyntax"/>
            <Class IRI="#SnortRuleSyntax"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPFlags_BitmaskNonZero"/>
        <ObjectIntersectionOf>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasConstraint"/>
                <NamedIndividual IRI="#bitmaskMatchNonZero"/>
            </ObjectHasValue>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasDomain"/>
                <NamedIndividual IRI="#TCPFlags"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPFlags_SnortFlagsExpressionMatch"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasConstraint"/>
                <Class IRI="#SnortFlagsExpressionMatch"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasDomain"/>
                <NamedIndividual IRI="#TCPFlags"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#IPIRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#TCPProtocolResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPPacketPayload_StringMatch"/>
        <ObjectIntersectionOf>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasConstraint"/>
                <NamedIndividual IRI="#stringMatch"/>
            </ObjectHasValue>
            <ObjectHasValue>
                <ObjectProperty IRI="#hasDomain"/>
                <NamedIndividual IRI="#TCPPacketDataLength"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#TCPPacket_IPPacketTotalLengthRepresentation"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#isProducedByContext"/>
                <Class IRI="#TCPPacketContext"/>
            </ObjectSomeValuesFrom>
            <ObjectHasValue>
                <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
                <NamedIndividual IRI="#TCPPacketDataLength"/>
            </ObjectHasValue>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#UDPIRS"/>
        <ObjectIntersectionOf>
            <Class IRI="#IPIRS"/>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#hasResponse"/>
                <Class IRI="#UDPProtocolResponse"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </EquivalentClasses>
    <EquivalentClasses>
        <Class IRI="#WindowsLogAnalysis"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#hasSyntax"/>
            <Class IRI="#WindowsEventLogAnalysisRuleSyntax"/>
        </ObjectSomeValuesFrom>
    </EquivalentClasses>
    <SubClassOf>
        <Class IRI="#ApplicationResource"/>
        <Class IRI="#Resource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ApplicationResponse"/>
        <Class IRI="#Response"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ApplicationSignalDomainContext"/>
        <Class IRI="#SignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#AttackMaliciousActivityEvent"/>
        <Class IRI="#MaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#AutomatedAttackMaliciousActivityEvent"/>
        <Class IRI="#AttackMaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#BitMaskMatchNonZero"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ByteEquality"/>
        <Class IRI="#ByteRange"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ByteRange"/>
        <Class IRI="#ByteSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ByteRangeSet"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ByteSet"/>
        <Class IRI="#ByteRangeSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#CodeRedWormPropagationEvent"/>
        <Class IRI="#WormAttackMaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ComponentFailureEvent"/>
        <Class IRI="#Event"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ContextFreeGrammar"/>
        <Class IRI="#PCREGrammar"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ContextSensitiveGrammar"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DDOSAttackMaliciousActivityEvent"/>
        <Class IRI="#AutomatedAttackMaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DNSProtocolResponse"/>
        <Class IRI="#UDPProtocolResponse"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DNSResource"/>
        <Class IRI="#UDPResource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#DNSSignalDomainContext"/>
        <Class IRI="#UDPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPGetRequest"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPGetRequestParameter"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPPacketContext"/>
        <Class IRI="#HTTPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPProtocolResponse"/>
        <Class IRI="#TCPProtocolResponse"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPResource"/>
        <Class IRI="#TCPResource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HTTPSignalDomainContext"/>
        <Class IRI="#TCPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HostResource"/>
        <Class IRI="#Resource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HostResponse"/>
        <Class IRI="#Response"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#HostSignalDomainContext"/>
        <Class IRI="#SignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ICMPProtocolResponse"/>
        <Class IRI="#IPProtocolResponse"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ICMPResource"/>
        <Class IRI="#IPResource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ICMPSignalDomainContext"/>
        <Class IRI="#IPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPAddressCountThreshold"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPAddressRange"/>
        <Class IRI="#IPAddressSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPAddressRangeSet"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPAddressSet"/>
        <Class IRI="#IPAddressRangeSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPAddressValue"/>
        <Class IRI="#IPAddressRange"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPDestinationAddress_IPRangeSet"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketContext_SignalDomain"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketData"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketHeader"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketSignalDomainContext"/>
        <Class IRI="#NetworkPacketSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacketTotalLength_IntegerGreaterThan"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPPacket_IPPacketProtocolNumberRepresentation"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPProtocolNumber"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPProtocolNumberSignal_ByteRangeSet"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPProtocolNumber_ByteEquality"/>
        <Class IRI="#IPProtocolNumberSignal_ByteRangeSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPProtocolResponse"/>
        <Class IRI="#NetworkResponse"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPResource"/>
        <Class IRI="#NetworkResource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPSignalDomainContext"/>
        <Class IRI="#NetworkSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPSourceAddress_IPRangeSet"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPSourceAddress_UniqueSourceIPAddressCountThreshold"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPv4Address"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPv4DestinationAddress"/>
        <Class IRI="#IPv4Address"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IPv4SourceAddress"/>
        <Class IRI="#IPv4Address"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IntegerEquality"/>
        <Class IRI="#IntegerRangeSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IntegerGreaterThan"/>
        <Class IRI="#IntegerInequality"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IntegerInequality"/>
        <Class IRI="#IntegerRangeSet"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IntegerLessThan"/>
        <Class IRI="#IntegerInequality"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#IntegerRangeSet"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPCAPDataset"/>
        <Class IRI="#NetworkPacketDataset"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPcap_IPPacketView"/>
        <Class IRI="#PacketView"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPcap_IPPacketView"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#exposesContext"/>
                <Class IRI="#IPPacketSignalDomainContext"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#providesViewOf"/>
                <Class IRI="#LibPCAPDataset"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPcap_SecondOfPacketsView"/>
        <Class IRI="#TemporalView"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LibPcap_SecondOfPacketsView"/>
        <ObjectIntersectionOf>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#exposesContext"/>
                <Class IRI="#SecondOfPacketsSignalDomainContext"/>
            </ObjectSomeValuesFrom>
            <ObjectSomeValuesFrom>
                <ObjectProperty IRI="#providesViewOf"/>
                <Class IRI="#LibPCAPDataset"/>
            </ObjectSomeValuesFrom>
        </ObjectIntersectionOf>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#LogAnalysisRuleSyntax"/>
        <Class IRI="#DetectorSyntax"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#MaliciousActivityEvent"/>
        <Class IRI="#Event"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ManualAttackMaliciousActivityEvent"/>
        <Class IRI="#AttackMaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetflowDataset"/>
        <Class IRI="#NetworkFlowDataset"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetflowRuleSyntax"/>
        <Class IRI="#DetectorSyntax"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetflowRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#IPDestinationAddress_IPRangeSet"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetflowRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#IPProtocolNumberSignal_ByteRangeSet"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetflowRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#IPSourceAddress_IPRangeSet"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetflowRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#IPSourceAddress_UniqueSourceIPAddressCountThreshold"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetflowRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#TCPDestinationPort_integerEquality"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkFlowDataset"/>
        <Class IRI="#Dataset"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkFlowDataset"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#isContainerOf"/>
            <Class IRI="#NetworkFlowSignalDomainContext"/>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkFlowSignalDomainContext"/>
        <Class IRI="#NetworkSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkPacketDataset"/>
        <Class IRI="#Dataset"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkPacketDataset"/>
        <ObjectAllValuesFrom>
            <ObjectProperty IRI="#isContainerOf"/>
            <Class IRI="#NetworkPacketSignalDomainContext"/>
        </ObjectAllValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkPacketSignalDomainContext"/>
        <Class IRI="#NetworkSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkResource"/>
        <Class IRI="#Resource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkResponse"/>
        <Class IRI="#Response"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#NetworkSignalDomainContext"/>
        <Class IRI="#SignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PCREGrammar"/>
        <Class IRI="#ContextSensitiveGrammar"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketRate"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketRate_IntegerInequality"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketView"/>
        <Class IRI="#DatasetView"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketsPerMinute"/>
        <Class IRI="#PacketRate"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketsPerMinutePort80"/>
        <Class IRI="#PacketsPerMinute"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketsPerMinutePort80SampledEachPacket"/>
        <Class IRI="#PacketsPerMinutePort80"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#PacketsPerSecond"/>
        <Class IRI="#PacketRate"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RealInequality"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RealRangeSet"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#ReconMaliciousActivityEvent"/>
        <Class IRI="#MaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#RegularGrammar"/>
        <Class IRI="#ContextFreeGrammar"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SecondOfPacketsSignalDomainContext"/>
        <Class IRI="#TemporalSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SingleBitMaskMatchNonZero"/>
        <Class IRI="#BitMaskMatchNonZero"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortCompatibleIDS"/>
        <Class IRI="#IDS"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortFlagsExpressionMatch"/>
        <Class IRI="#SignalConstraint"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortRule"/>
        <Class IRI="#Detector"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortRuleSyntax"/>
        <Class IRI="#DetectorSyntax"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#IPDestinationAddress_IPRangeSet"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#IPSourceAddress_UniqueSourceIPAddressCountThreshold"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SnortRuleSyntax"/>
        <ObjectSomeValuesFrom>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <Class IRI="#TCPDestinationPort_integerEquality"/>
        </ObjectSomeValuesFrom>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#StringMatch"/>
        <Class IRI="#SubstringMatch"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#SubstringMatch"/>
        <Class IRI="#RegularGrammar"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPDestinationPort"/>
        <Class IRI="#TCPPort"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPFlags_BitmaskNonZero"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPFlags_SnortFlagsExpressionMatch"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacketContext"/>
        <Class IRI="#TCPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacketPayload_StringMatch"/>
        <Class IRI="#Signal"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacketSignalDomainContext"/>
        <Class IRI="#IPPacketSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacketSignalDomainContext"/>
        <Class IRI="#TCPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPacket_IPPacketTotalLengthRepresentation"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPPort"/>
        <Class IRI="#SignalDomain"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPProtocolResponse"/>
        <Class IRI="#IPProtocolResponse"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPResource"/>
        <Class IRI="#IPResource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPSignalDomainContext"/>
        <Class IRI="#IPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TCPSourcePort"/>
        <Class IRI="#TCPPort"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TemporalSignalDomainContext"/>
        <Class IRI="#SignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#TemporalView"/>
        <Class IRI="#DatasetView"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UDPPacketContext"/>
        <Class IRI="#UDPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UDPProtocolResponse"/>
        <Class IRI="#IPProtocolResponse"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UDPResource"/>
        <Class IRI="#IPResource"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UDPSignalDomainContext"/>
        <Class IRI="#IPSignalDomainContext"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UniqueDestinationIPAddressCountThreshold"/>
        <Class IRI="#UniqueIPAddressCountThreshold"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UniqueIPAddressCountThreshold"/>
        <Class IRI="#IPAddressCountThreshold"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UniqueSourceIPAddressCountThreshold"/>
        <Class IRI="#UniqueIPAddressCountThreshold"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#UserMasqueradeAttackMaliciousActivityEvent"/>
        <Class IRI="#ManualAttackMaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#VirusAttackMaliciousActivityEvent"/>
        <Class IRI="#AutomatedAttackMaliciousActivityEvent"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsEventLogAnalysisRuleSyntax"/>
        <Class IRI="#LogAnalysisRuleSyntax"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsEventLogDataset"/>
        <Class IRI="#Dataset"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsEventLogDataset"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#isContainerOf"/>
            <NamedIndividual IRI="#TCPPacket"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsEventLog_TextFileView"/>
        <Class IRI="#DatasetView"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsEventLog_TextFileView"/>
        <ObjectHasValue>
            <ObjectProperty IRI="#exposesContext"/>
            <NamedIndividual IRI="#TCPPacket"/>
        </ObjectHasValue>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WindowsLogAnalysis"/>
        <Class IRI="#Detector"/>
    </SubClassOf>
    <SubClassOf>
        <Class IRI="#WormAttackMaliciousActivityEvent"/>
        <Class IRI="#AutomatedAttackMaliciousActivityEvent"/>
    </SubClassOf>
    <DisjointClasses>
        <Class IRI="#ApplicationIRS"/>
        <Class IRI="#HostIRS"/>
        <Class IRI="#NetworkIRS"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ApplicationResource"/>
        <Class IRI="#HostResource"/>
        <Class IRI="#NetworkResource"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ApplicationSignalDomainContext"/>
        <Class IRI="#HostSignalDomainContext"/>
        <Class IRI="#NetworkSignalDomainContext"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#AttackMaliciousActivityEvent"/>
        <Class IRI="#ReconMaliciousActivityEvent"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#AutomatedAttackMaliciousActivityEvent"/>
        <Class IRI="#ManualAttackMaliciousActivityEvent"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ComponentFailureEvent"/>
        <Class IRI="#MaliciousActivityEvent"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ICMPIRS"/>
        <Class IRI="#TCPIRS"/>
        <Class IRI="#UDPIRS"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ICMPProtocolResponse"/>
        <Class IRI="#TCPProtocolResponse"/>
        <Class IRI="#UDPProtocolResponse"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ICMPResource"/>
        <Class IRI="#TCPResource"/>
        <Class IRI="#UDPResource"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#ICMPSignalDomainContext"/>
        <Class IRI="#TCPSignalDomainContext"/>
        <Class IRI="#UDPSignalDomainContext"/>
    </DisjointClasses>
    <DisjointClasses>
        <Class IRI="#VirusAttackMaliciousActivityEvent"/>
        <Class IRI="#WormAttackMaliciousActivityEvent"/>
    </DisjointClasses>
    <ClassAssertion>
        <Class IRI="#IPPacketHeader"/>
        <NamedIndividual IRI="#TCPPacketDataLength"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#TCPPacket_IPPacketTotalLengthRepresentation"/>
        <NamedIndividual IRI="#TCPPacket_TCPPacketDataRepresentation1"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#PacketsPerSecond"/>
        <NamedIndividual IRI="#dport80PacketsPerSecond"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#NetworkResponse"/>
        <NamedIndividual IRI="#hostFWBlock"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IntegerInequality"/>
        <NamedIndividual IRI="#integerGreaterThan"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IntegerInequality"/>
        <NamedIndividual IRI="#integerLessThan"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#IPPacketSignalDomainContext"/>
        <NamedIndividual IRI="#ipPacketSignalDomainContext"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SecondOfPacketsSignalDomainContext"/>
        <NamedIndividual IRI="#secondSampleByPacket"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SnortFlagsExpressionMatch"/>
        <NamedIndividual IRI="#snortFlagsExpressionMatch"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#SnortRuleSyntax"/>
        <NamedIndividual IRI="#snortRuleSyntax3"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#StringMatch"/>
        <NamedIndividual IRI="#stringMatch"/>
    </ClassAssertion>
    <ClassAssertion>
        <Class IRI="#UniqueDestinationIPAddressCountThreshold"/>
        <NamedIndividual IRI="#uniqueIPThreshold"/>
    </ClassAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#HTTPGetParameter"/>
        <NamedIndividual IRI="#TCPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isProviderOfResource"/>
        <NamedIndividual IRI="#TCPPacket"/>
        <NamedIndividual IRI="#servicePortNumber"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isProviderOfResource"/>
        <NamedIndividual IRI="#TCPPacket"/>
        <NamedIndividual IRI="#srcIPAddress"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
        <NamedIndividual IRI="#TCPPacketDataLength"/>
        <NamedIndividual IRI="#TCPPacket_TCPPacketDataRepresentation1"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isInContext"/>
        <NamedIndividual IRI="#TCPPacketDataLength"/>
        <NamedIndividual IRI="#TCPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#hasEncapsulatedContext"/>
        <NamedIndividual IRI="#WindowsLogEntry"/>
        <NamedIndividual IRI="#TCPPacket"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#requiresResource"/>
        <NamedIndividual IRI="#hostFWBlock"/>
        <NamedIndividual IRI="#srcIPAddress"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#usesResource"/>
        <NamedIndividual IRI="#hostFWBlock"/>
        <NamedIndividual IRI="#destinationPortSet"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#usesResource"/>
        <NamedIndividual IRI="#hostFWBlock"/>
        <NamedIndividual IRI="#servicePortNumber"/>
    </ObjectPropertyAssertion>
    <ObjectPropertyAssertion>
        <ObjectProperty IRI="#isContextOfSignalDomain"/>
        <NamedIndividual IRI="#secondSampleByPacket"/>
        <NamedIndividual IRI="#dport80PacketsPerSecond"/>
    </ObjectPropertyAssertion>
    <DataPropertyAssertion>
        <DataProperty IRI="#hasSyntaxProductionImplementation"/>
        <NamedIndividual IRI="#snortRuleSyntax3"/>
        <Literal datatypeIRI="&rdf;PlainLiteral">net.strasnet.kids.detectorsyntaxproducers.KIDSSnortDetectorSyntax</Literal>
    </DataPropertyAssertion>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#canRepresent"/>
        <ObjectProperty abbreviatedIRI=":topObjectProperty"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#hasConstraint"/>
        <ObjectProperty abbreviatedIRI=":topObjectProperty"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#isDetectorFor"/>
        <ObjectProperty IRI="#compatibleWith"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#isExposedIn"/>
        <ObjectProperty abbreviatedIRI=":topObjectProperty"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectProperty IRI="#requiresResource"/>
        <ObjectProperty IRI="#usesResource"/>
    </SubObjectPropertyOf>
    <InverseObjectProperties>
        <ObjectProperty IRI="#existsInView"/>
        <ObjectProperty IRI="#bringsIntoExistence"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#canApplySignal"/>
        <ObjectProperty IRI="#isAppliedByDetector"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#canDetectEvent"/>
        <ObjectProperty IRI="#isDetectedByIDS"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#canMonitor"/>
        <ObjectProperty IRI="#isMonitoredBy"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isExpressibleInSyntax"/>
        <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isVisibleToDetector"/>
        <ObjectProperty IRI="#canSeeManifestation"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#exposesContext"/>
        <ObjectProperty IRI="#isExposedIn"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#hasConstraint"/>
        <ObjectProperty IRI="#isConstraintOf"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isLabelerForDatasetView"/>
        <ObjectProperty IRI="#hasDatasetLabel"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isIncludedInIDS"/>
        <ObjectProperty IRI="#hasDetector"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isDomainOfSignal"/>
        <ObjectProperty IRI="#hasDomain"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isEncapsulatedInContext"/>
        <ObjectProperty IRI="#hasEncapsulatedContext"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isRepresentedInDataset"/>
        <ObjectProperty IRI="#hasEventIncluded"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isIncludedInIRS"/>
        <ObjectProperty IRI="#hasResponse"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#representsDetector"/>
        <ObjectProperty IRI="#hasSyntax"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isRepresentableBy"/>
        <ObjectProperty IRI="#isAbleToRepresent"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isAffectedBy"/>
        <ObjectProperty IRI="#isResponseFor"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isEvaluableWithDataset"/>
        <ObjectProperty IRI="#isCompatibleDatasetForSignal"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isContainedIn"/>
        <ObjectProperty IRI="#isContainerOf"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isContextOfSignalDomain"/>
        <ObjectProperty IRI="#isInContext"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isDetectedBy"/>
        <ObjectProperty IRI="#isDetectorFor"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isEvaluatedBy"/>
        <ObjectProperty IRI="#isEvaluationOf"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isEventIdentifierFor"/>
        <ObjectProperty IRI="#isIdentifiedByDetector"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isIncludedInLabel"/>
        <ObjectProperty IRI="#isLabelForEvent"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#realizesSignalRepresentation"/>
        <ObjectProperty IRI="#isManifestedBy"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isMitigatedByIRS"/>
        <ObjectProperty IRI="#respondsTo"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isProducerOf"/>
        <ObjectProperty IRI="#isProducedBy"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isProducedByContext"/>
        <ObjectProperty IRI="#producesRepresentation"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isProvidedBy"/>
        <ObjectProperty IRI="#isProviderOfResource"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#isRepresentationOfSignal"/>
        <ObjectProperty IRI="#isRepresentedBy"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#providesViewOf"/>
        <ObjectProperty IRI="#isViewableAs"/>
    </InverseObjectProperties>
    <InverseObjectProperties>
        <ObjectProperty IRI="#usedByResponse"/>
        <ObjectProperty IRI="#usesResource"/>
    </InverseObjectProperties>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#hasConstraint"/>
    </FunctionalObjectProperty>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#hasDomain"/>
    </FunctionalObjectProperty>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#isInContext"/>
    </FunctionalObjectProperty>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#isProducedByContext"/>
    </FunctionalObjectProperty>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#isRepresentationOfSignalDomain"/>
    </FunctionalObjectProperty>
    <FunctionalObjectProperty>
        <ObjectProperty IRI="#providesViewOf"/>
    </FunctionalObjectProperty>
    <InverseFunctionalObjectProperty>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
    </InverseFunctionalObjectProperty>
    <InverseFunctionalObjectProperty>
        <ObjectProperty IRI="#isDomainOfSignal"/>
    </InverseFunctionalObjectProperty>
    <InverseFunctionalObjectProperty>
        <ObjectProperty IRI="#isManifestedBy"/>
    </InverseFunctionalObjectProperty>
    <InverseFunctionalObjectProperty>
        <ObjectProperty IRI="#producesRepresentation"/>
    </InverseFunctionalObjectProperty>
    <TransitiveObjectProperty>
        <ObjectProperty IRI="#hasEncapsulatedContext"/>
    </TransitiveObjectProperty>
    <TransitiveObjectProperty>
        <ObjectProperty IRI="#isEncapsulatedInContext"/>
    </TransitiveObjectProperty>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#canApplySignal"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#canDetectEvent"/>
        <Class IRI="#IDS"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#canMonitor"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#canRepresent"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
        <Class IRI="#DetectorSyntax"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#canSeeManifestation"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#compatibleWith"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#existsInView"/>
        <Class IRI="#SignalManifestation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasConstraint"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasDatasetLabel"/>
        <Class IRI="#DatasetView"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasDetector"/>
        <Class IRI="#IDS"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasDomain"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasEncapsulatedContext"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasResponse"/>
        <Class IRI="#IRS"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
        <Class IRI="#SignalDomain"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#hasSyntax"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isAffectedBy"/>
        <Class IRI="#Event"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isCompatibleDatasetForSignal"/>
        <Class IRI="#Dataset"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isContainerOf"/>
        <Class IRI="#Dataset"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isContextOfSignalDomain"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isDetectedBy"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isDomainOfSignal"/>
        <Class IRI="#SignalDomain"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isEncapsulatedInContext"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isEvaluationOf"/>
        <Class IRI="#Dataset"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isEventIdentifierFor"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isExposedIn"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isIdentifiedByDetector"/>
        <Class IRI="#Event"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isInContext"/>
        <Class IRI="#SignalDomain"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isIncludedInIDS"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isIncludedInIRS"/>
        <Class IRI="#Response"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isLabelForEvent"/>
        <Class IRI="#DatasetLabel"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isManifestedBy"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isMitigatedByIRS"/>
        <Class IRI="#Event"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isProducedBy"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isProducedByContext"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isProducerOf"/>
        <Class IRI="#Event"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isProvidedBy"/>
        <Class IRI="#Resource"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isProviderOfResource"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isRepresentableBy"/>
        <Class IRI="#SignalConstraint"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isRepresentedBy"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isRepresentedInDataset"/>
        <Class IRI="#Event"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isResponseFor"/>
        <Class IRI="#Response"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#isViewableAs"/>
        <Class IRI="#Dataset"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#requiresResource"/>
        <Class IRI="#Response"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#respondsTo"/>
        <Class IRI="#IRS"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#usedByResponse"/>
        <Class IRI="#Resource"/>
    </ObjectPropertyDomain>
    <ObjectPropertyDomain>
        <ObjectProperty IRI="#usesResource"/>
        <Class IRI="#Response"/>
    </ObjectPropertyDomain>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#canApplySignal"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#canDetectEvent"/>
        <Class IRI="#Event"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#canMonitor"/>
        <Class IRI="#DatasetView"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#canRepresent"/>
        <Class IRI="#SignalConstraint"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#canSeeManifestation"/>
        <Class IRI="#SignalManifestation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#compatibleWith"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#existsInView"/>
        <Class IRI="#DatasetView"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasConstraint"/>
        <Class IRI="#SignalConstraint"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasDatasetLabel"/>
        <Class IRI="#DatasetLabel"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasDetector"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasDomain"/>
        <Class IRI="#SignalDomain"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasEncapsulatedContext"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasResponse"/>
        <Class IRI="#Response"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#hasSyntax"/>
        <Class IRI="#DetectorSyntax"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isAffectedBy"/>
        <Class IRI="#Response"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isCompatibleDatasetForSignal"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isContainerOf"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isContextOfSignalDomain"/>
        <Class IRI="#SignalDomain"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isDetectedBy"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isDomainOfSignal"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isEncapsulatedInContext"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isEvaluationOf"/>
        <Class IRI="#Event"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isEventIdentifierFor"/>
        <Class IRI="#Event"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isExposedIn"/>
        <Class IRI="#DatasetView"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isIdentifiedByDetector"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isInContext"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isIncludedInIDS"/>
        <Class IRI="#IDS"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isIncludedInIRS"/>
        <Class IRI="#IRS"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isLabelForEvent"/>
        <Class IRI="#Event"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isManifestedBy"/>
        <Class IRI="#SignalManifestation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isMitigatedByIRS"/>
        <Class IRI="#IRS"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isProducedBy"/>
        <Class IRI="#Event"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isProducedByContext"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isProducerOf"/>
        <Class IRI="#Signal"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isProvidedBy"/>
        <Class IRI="#SignalDomainContext"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isProviderOfResource"/>
        <Class IRI="#Resource"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isRepresentableBy"/>
        <Class IRI="#Detector"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isRepresentedBy"/>
        <Class IRI="#SignalDomainRepresentation"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isRepresentedInDataset"/>
        <Class IRI="#Dataset"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isResponseFor"/>
        <Class IRI="#Event"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#isViewableAs"/>
        <Class IRI="#DatasetView"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#requiresResource"/>
        <Class IRI="#Resource"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#respondsTo"/>
        <Class IRI="#Event"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#usedByResponse"/>
        <Class IRI="#Response"/>
    </ObjectPropertyRange>
    <ObjectPropertyRange>
        <ObjectProperty IRI="#usesResource"/>
        <Class IRI="#Resource"/>
    </ObjectPropertyRange>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#canSeeManifestation"/>
            <ObjectProperty IRI="#existsInView"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#canMonitor"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#hasDetector"/>
            <ObjectProperty IRI="#isEventIdentifierFor"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#canDetectEvent"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#hasDomain"/>
            <ObjectProperty IRI="#hasSignalDomainRepresentation"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#isRepresentedBy"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#hasDomain"/>
            <ObjectProperty IRI="#isInContext"/>
            <ObjectProperty IRI="#isContainedIn"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#isEvaluableWithDataset"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#hasSyntax"/>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#canApplySignal"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#hasSyntax"/>
            <ObjectProperty IRI="#canRepresentFeatureWithConstraint"/>
            <ObjectProperty IRI="#hasConstraint"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#canRepresent"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#isAffectedBy"/>
            <ObjectProperty IRI="#isIncludedInIRS"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#isMitigatedByIRS"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#isContainedIn"/>
            <ObjectProperty IRI="#isContextOfSignalDomain"/>
            <ObjectProperty IRI="#isDomainOfSignal"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#isCompatibleDatasetForSignal"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#isEncapsulatedInContext"/>
            <ObjectProperty IRI="#isProviderOfResource"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#isProviderOfResource"/>
    </SubObjectPropertyOf>
    <SubObjectPropertyOf>
        <ObjectPropertyChain>
            <ObjectProperty IRI="#usesResource"/>
            <ObjectProperty IRI="#isProvidedBy"/>
            <ObjectProperty IRI="#isContextOfSignalDomain"/>
            <ObjectProperty IRI="#isDomainOfSignal"/>
            <ObjectProperty IRI="#isProducedBy"/>
        </ObjectPropertyChain>
        <ObjectProperty IRI="#isResponseFor"/>
    </SubObjectPropertyOf>
    <FunctionalDataProperty>
        <DataProperty IRI="#datasetLocation"/>
    </FunctionalDataProperty>
    <FunctionalDataProperty>
        <DataProperty IRI="#hasLabelDataLocation"/>
    </FunctionalDataProperty>
    <FunctionalDataProperty>
        <DataProperty IRI="#hasValue"/>
    </FunctionalDataProperty>
    <FunctionalDataProperty>
        <DataProperty IRI="#signalConstraintImplementation"/>
    </FunctionalDataProperty>
    <FunctionalDataProperty>
        <DataProperty IRI="#viewProductionImplementation"/>
    </FunctionalDataProperty>
    <DataPropertyDomain>
        <DataProperty IRI="#datasetLocation"/>
        <Class IRI="#Dataset"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#hasImplementationClass"/>
        <Class IRI="#Detector"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#hasLabelDataLocation"/>
        <Class IRI="#DatasetLabel"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#hasLabelFunction"/>
        <Class IRI="#DatasetLabel"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#hasSyntaxProductionImplementation"/>
        <Class IRI="#DetectorSyntax"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#signalConstraintImplementation"/>
        <Class IRI="#SignalConstraint"/>
    </DataPropertyDomain>
    <DataPropertyDomain>
        <DataProperty IRI="#viewProductionImplementation"/>
        <Class IRI="#DatasetView"/>
    </DataPropertyDomain>
    <DataPropertyRange>
        <DataProperty IRI="#hasValue"/>
        <Datatype abbreviatedIRI="xsd:string"/>
    </DataPropertyRange>
    <DLSafeRule>
        <Body>
            <ObjectPropertyAtom>
                <ObjectProperty IRI="#hasDomain"/>
                <Variable IRI="urn:swrl#s"/>
                <Variable IRI="urn:swrl#d"/>
            </ObjectPropertyAtom>
            <ObjectPropertyAtom>
                <ObjectProperty IRI="#isContainedIn"/>
                <Variable IRI="urn:swrl#c"/>
                <Variable IRI="urn:swrl#D"/>
            </ObjectPropertyAtom>
            <ObjectPropertyAtom>
                <ObjectProperty IRI="#isInContext"/>
                <Variable IRI="urn:swrl#d"/>
                <Variable IRI="urn:swrl#c"/>
            </ObjectPropertyAtom>
            <ObjectPropertyAtom>
                <ObjectProperty IRI="#isProducerOf"/>
                <Variable IRI="urn:swrl#e"/>
                <Variable IRI="urn:swrl#s"/>
            </ObjectPropertyAtom>
        </Body>
        <Head>
            <ObjectPropertyAtom>
                <ObjectProperty IRI="#isEvaluationOf"/>
                <Variable IRI="urn:swrl#D"/>
                <Variable IRI="urn:swrl#e"/>
            </ObjectPropertyAtom>
        </Head>
    </DLSafeRule>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#DDOSAttackMaliciousActivityEvent</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">An automated distributed denial of service attack (e.g. a Smurf attack).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Dataset</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A collection of contexts used for IDRS evaluation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#DatasetView</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A DatasetView is an extraction of Contexts from a specific Dataset.  Examples may include:
* Packets from a LibPcap dataset
* Second-long aggregations of packets from a LibPcap dataset
* Minute-long aggregations of log records from a Syslog dataset

The DatasetView is related to Detectors by the ability of the detector to construct such a view.

The DatasetView is a &#39;glue&#39; class, allowing properties to be related to a specific representation of a context within a dataset.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Detector</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A Detector is an implementation of a set of signals intended to identify an Event.  Examples include:
* A Snort signature
* A Bro policy
* A Splunk alert condition

== Classes vs Instances ==
Subclasses of detector are currently unusued. 

A detector instance is related to the set of signals it includes by the relation isDetectorFor (~ isDetectedBy).  In order to actually manifest a detector, the set of signals must be mapped to a set of IDSes which can represent those signals.  This is done by following the chain of relations from signals to languages (isRepresentationLanguageOf) to syntactic forms (hasSyntacticForm) to IDSes (hasSyntacticForm).  The intersection with the signalDomain the signal is from will determine if an IDS can instantiate a signal or not.

E.g. Snort implements a rule-based syntactic form which is able to represent features from a variety of languages.  For instance, an four-byte range set can represented for source and destination of an IP packet, a byte-match range set can be expressed for both source and destination port, and a regular language can be expressed as a packet content match.  Thus, a detector which employs a substring match on packet data, e.g. to identify a specific URI request in an HTTP packet, can be manifested (at least in part) by the Snort IDS.

=== Subclassing ===
To create a new subclass of Detector, a rule needs to be created indicating the classes of signal this detector is able to represent.  This rule will require an instance for each signal domain representable by this subclass as well as a subclass of SignalCanonicalRepresentation for each canonical form this detector can represent.

=== Instantiating ===
To instantiate a Detector, the following must also be indicated:
* At least one value for the object property hasSyntacticForm to enable generation of the detector.
* At least one (possibly anonymous) instance of an IDS which employs this detector
* At least one signal included in the detector</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#DetectorSyntax</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A detector syntax is a specific specification of a detector.  An example would be a snort rule, or a splunk query.  The syntax determines the types of constraints which a detector can apply to a signal domain.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Event</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">An Event is any change in the security posture of a system (where a system is a collection of components which need to be monitored).  Events are observable if they produce at least one signal (e.g. a worm propagation attempt).  Otherwise, they are not observable (e.g. a shoulder surfing attack).

== Class vs Instance ==
A class of event describes characteristics related to intent and objective.  For instance, a malicious activity event, or a component failure event.  These classes are not &quot;defined&quot; classes, rather they are specified manually for an event, and an event can only be assigned to one class.  

Event instances are specific events in the model sense.  That is, they are a category of event (e.g. CodeRed propagation attempt), rather than a manifestation of an event (e.g. an actual CodeRed propagation in &quot;the wild&quot;).  In addition to being related to a set of signals via the isProducerOf relation, some inferred relations associate events with:
* [D] isAffectedBy - The responses which are effective .
* [D] isIdentifiedByDetector - The Detectors which are able to identify this event (again, this is a defined class; it should not be specified manually).
* isIdentifiedByFingerprint - The Fingerprint which uniquely specifies this event.
* [D] isMitigatedByIRS - The set of IRSes which contain respones effective against this event.

(Note: [D] signifies a defined relation; it need not be specified manually; in fact, it *should* not)

=== Subclassing ===
To define a new subclass of event, the intent and objective of the event should be represented in the new subclass name.  

=== Instantiating ===
To instantiate a class of event, the instance should indicate at least one signal it produces.  If not, an anonymous signal will be inferred through the class definition (things which produce some signal).

An effort should be made to subclass the event according to intent or objective.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#IDS</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">An Intrusion Detection System (IDS) is a collection of detectors.

== Class vs. Instance ==

Subclasses of IDS indicate the &quot;brand&quot; or &quot;family&quot; of ids.  For instance, a Snort IDS, a Bro IDS.

Classes of IDS have properties such as an associated EventSyntacticForm, and a set of compatible Detectors (e.g. Snort signatures).  

An instance of an IDS represents a specific IDS implementation / deployment.  This includes, for instance, the SnortIDS deployed at site X, running a defined set of specific rules.

=== Subclassing ===

A new subclass of IDS should indicate, as an equivalent class, the Event syntactic forms supported by instances of the new subclass.

=== Instantiating ===

An instance of an IDS should indicate the syntactic forms it supports (possibly through assignment to an appropriate subclass) as well as any detectors it explicitly includes.

</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#IPAddressRangeSet</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The canonical form for the IPAddressRangeSet family of representations is:
[10.0.0.1/255.255.255.0, 10.0.1.1/255.255.255.0, ...]</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#IRS</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">An intrusion response system (IRS) is a collection of responses.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Resource</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A resource is an input to a response which is associated with at least one context.  Examples include the source IP address in an IP Packet context, or the process ID in a host audit log.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Response</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A response is any action which can be taken in a system.  Typically, responses are intended to disrupt, mitigate the effects of, or recover from an Event.  Responses require Resources, pieces of information about the system, in order ot be effective.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#Signal</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A signal is an observable byproduct of an event.  Examples include:
* Destination port == 80
* Source IP in range 10.0.0.0/8
* Number of processes spawned &gt; 10
* Day of week == Tuesday

== Class vs. Instance ==

Subclasses of Signal indicate the combined domain+signalCanonicalRepresentation which a signal is defined over.  Subclasses are associated with the syntactic forms able to represent them via rules.  

Instances of Signal are specific values, defined in terms of the canonical represention, and applied to a specific domain.  For example, a specific IP address as a source address.

=== Subclassing ===

Subclasses of signal should ideally follow the naming convention Feature_Representation.  Regardless of naming convention, however, each new subclass should be a defined class where membership is equivalent to membership in isValueInSignalDomain value X and hasCanonicalRepresentation some Y.  In this case, X is the domain being restricted, and Y is a class of canonical forms which can specify this signal.

Thus, a new subclass must be accompanied by a suitable instance of SignalDomain, as well as a subclass of SignalCanonicalRepresentation.

=== Instantiating ===
An instance of Signal must be placed in an appropriate subclass either explicitly, or by inference.

If by inference, then the new instance must indicate the signal domain to which it is applied (this domain instance must exist, or be created), and the canonical representation it uses (again, an instance must exist or be created).  If this combination is not equivalent to a current named subclass of Signal, then such a subclass should be created.  
</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SignalConstraint</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The canonical represention indicates the language of a signal.  As a signal is simply a constraint on a feature value, the language that constraint is represented in may vary.  A range of integer values, a regular expression, or a threshold over a statistical model are all examples of languages which a signal can be expressed in.

== Class vs. Instance ==

Subclasses of SignalCanonicalRepresentation represent groups of distinct representation languages and the alphabets they employ.  For instance, ByteRangeSet indicates an alphabet of single Bytes, with a language consisting of sets of ranges.  

A heirarchy of subclasses should be maintained so that, e.g., a single byte match is a subclass of range of bytes, which is a subclass of a set of bytes, which is a subclass of a set of ranges of bytes.  In this way, more general representations are described accurately as being able to cover more restricted ones.

Instances are assigned to a class of representation and are associated with a specific implementation of the representation.  This implementation is a java class which implements the interface &lt;specify here&gt;.  This class can read and produce the canonical representation as well as perform transformations into more common syntactic forms via the signalCanonicalRepresentationImplementation data property.

=== Subclassing ===

Creating a new subclass of Signal Canonical Representation requires first determining if the new subclass is a specialization of an existing subclass.  Classes are defined by datatype (alphabet) coupled with expression complexity (language).

For instance, a RealValueMatch representation is a specialization of a RealRangeSet, so it should be a subclass under (possibly a successor of) RealRangeSet.  On the other hand, ImaginaryInequality is not as it specifies a new data type, so it must be specified at the top level.

=== Instantiating ===

An instance of a canonical representation must specify the data object property signalCanonicalRepresentationImplementation with a value corresponding to the java class (on the current classpath) which implements the representation.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SignalDomain</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A signal domain is a feature, for instance, packet size.   This indicates the domain in which a signal (e.g. abnormally large packets) can be applied.

== Class vs. Instance ==

A class of signal domain is currently not used.

An instance of a signal domain is a specific feature over which a signal can be applied.  For instance, a sourceIPAddress, or a normalModelOfTransmittedPacketCounts.  These instances are related to contexts that they can occur in (hasSignalDomainContext), as well as the signals defined over them (isDomainOfSignal). 

=== Subclassing ===

A subclass of SignalDomain is currently unrestricted.

=== Instantiating ===

An instance of a signal domain is unrestricted.  </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SignalDomainContext</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The signal domain context is the context in which a signal domain is defined.  For instance, packet size is a signal domain which can only occur in the context of a network packet.  Another example is network session duration, which occurs in the context of a network session.

The context determines which data sources can provide data for assessing a detector.   If network sessions are the context, we need session-based data, e.g. NetFlow.  If packets are, we need PCAPs.

== Class vs. Instance ==
Classes of signal domain context may indicate the general &quot;unit&quot; of a context, e.g.,  network packet contexts, or statistical distribution contexts.

A context instance is a specific context type, e.g. an IP packet.  Note that this is *not* necessarily a specific instance of an ip packet, rather it is a specific type of context within a larger class of contexts (e.g. network packets).

=== Subclassing ===
A new subclass of signal domain context must include as a definition (equivalence class) the conjunction of things which &quot;isContextOfSignalDomain&quot; all signal domains which are known to occur in this context.

=== Instantiating ===
An instance of a context is a particular manifestation of a class of contexts.  In addition to the signal domains which are known to occur in all contexts of its class, an instance may specify additional domains which happen to be present in it.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SignalDomainRepresentation</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A signal domain representation is another &quot;glue&quot; class which provides a target for relations with a domain or range of a particular representation of a domain within a signal context.  An example would be a source IP address within an IP Packet.

The representation is used, for instance, to relate the source IP address associated with an IP Packet, as distinct from the source IP address associated with a netflow record (which would be a separate representation).</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#SignalManifestation</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">A signal manifestation associates a SignalDomainRepresentation with a DatasetView, 
and represents a particular concrete instance of a signal domain within a particular dataset view.  An example would be the SIPAddress representation within a LibPCAP file, as output by tcpdump -a (e.g. a dotted-quad IP address).

In this case, the view would be the ascii output produced by tcpdump -a, and the representation would be the dotted-quad IP address associated with an IP packet.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#TCPFlags_SnortFlagsExpressionMatch</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral"> * In Snort, only the following types of flag specifications can be represented:
 *  - Specified bits on, the rest must be off. (e.g. &quot;flags: SF&quot;)
 *  - Specified bits on, the rest can be on or off. (e.g. &quot;flags: +SF&quot;)
 *  - At least one specified bit on, the rest must be off (e.g. &quot;flags: *SF&quot;)
 *  - Specified bits off, the rest can be on or off. (e.g. flags: !SF&quot;)
 *  
 *  Specifically, the following *cannot* be represented:
 *  - One specified bit on, a second off, and rest can be on or off.
 *  - Two specified bits are on, while at least one of three other bits are on.
 *  
 *  Thus, as long as only 2 of the three possible bit mask values are specified (0 for must be off,
 *  1 for must be on, -n for one of the flags on, and * for either on or off), Snort can represent it.  The following approach is used to produce
 *  a valid Snort rule:
 *   - If the match consists of 0 or more &#39;0&#39; and the rest &#39;1&#39; values, the option is produced with no modifiers.
 *   - If the match consists only of (at least one) &#39;*&#39; and &#39;1&#39; values, the option is produced with the &#39;+&#39; modifier.
 *   - If the match consists only of (at least one) &#39;0&#39; and &#39;*&#39; values, the option is produced with the &#39;!&#39; modifier.
 *   - If the match consists only of (at least one) &#39;*&#39; and &#39;-n&#39; values with only one value for &#39;n&#39;, the option is produced with the &#39;*&#39; modifier.
 *   - If the match is entirely &#39;0&#39; values, the option uses the Snort &#39;0&#39; flag specifier (e.g. flags: 0).
 *   - If the match is entirely &#39;*&#39; values, then there is no signal.
 *   - Otherwise, Snort cannot represent this signal in a single rule.
 *
 */</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#canApplySignal</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Relates a detector to the signals it is able to apply, that is, the signals it is able to represent with its syntax.  True when it can apply a given constraint language to a given signal domain.

This propery is established through the property chain hasSyntax o canRepresentFeatureWithConstraint</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#canMonitor</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that a detector can monitor a specific view of a dataset.  A view might be the ascii dump (via tcpdump) of a libpcap file, for instance.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#canSeeManifestation</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a detector with the signal manifestations it can &quot;see&quot;, that is, those it is able to both extract from a view, and parse the representation of.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#existsInView</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates the manifestation of a signal with the view in which it is manifested.  For example, the integer form of a destination tcp port is manifested in an ascii dump of a libpcap file.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#exposesContext</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a dataset view with the signal contexts is exposes.  For example, a libpcap file contains full packet data, but an ascii tcpdump output view may not expose all nested contexts. </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasConstraint</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Ties a signal to its constraint language.  For example, looking for the regular expression &#39;/^.*default.ida\?/&#39; has a regular expression constraint language, and the specified value.  </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasDetector</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Indicates that the IDS includes the named detector.  For instance, a Snort individual may include some set of Snort Rule detectors.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasDomain</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Relates signals to the value domains they are observed in.  </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasEncapsulatedContext</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">This transitive property allows inference on embedded contexts, allowing one to determine, e.g.  that a TCP packet over IP has a source and destination IP address.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasResponse</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Supports inference on the IRS coverage based on the responses it incorporates.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasSyntax</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that a detector uses a given syntax; this determines the types of signals and domain representations a detector can monitor.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#hasValue</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">The canonical signal value is the value of the signal given in the defined &quot;canonical&quot; form.  The form is defined by the representation language associated with the signal.  For instance, a regular-expression signal is represented as a list of edges with a defined start and final node.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isAbleToRepresent</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signifies that a particular syntactic form is able to represent a given signal.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isAffectedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">This relation is normally inferred, and maps events to the responses that can affect them.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isCompatibleDatasetForSignal</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the associated dataset can be utilized to evaluate the signal.  More formally, that the signal is present in a domain which is available in a context that is contained in a dataset.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isConstraintOf</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Indicates that the named constraint is a constraint of the given signal.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isContainerOf</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Related datasets to the contexts they contain.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isContextOfSignalDomain</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Relate signal domains to context they are observed in.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isDetectedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">No longer needed?

Indicates that a signal is detected by a given detector.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isDetectorFor</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">No longer needed?

Indicates that a detector can spot a given signal.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isDomainOfSignal</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Maps a signal domain to the signals defined on it.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isEncapsulatedInContext</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Supports transitive inference on contexts which include this one.  For instance, inferring that a TCP packet is also an IP packet.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isEvaluationOf</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a dataset with the events it can be used to evaluate.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isEventIdentifierFor</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">An inferred property indicated that a detector is able to identify an event.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isIdentifiedByDetector</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">The isIdentifiedByDetector property indicates that a detector can identify a specific event instance.  This property holds when an event generates all of the signals included in the detector.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isInContext</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Specifies the domain context in which the signal occurs.  The domain context provides the resources which enable responses.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isIncludedInIDS</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Maps detectors to the IDS(s) that include them.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isIncludedInIRS</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Maps responses to the IRS(s) that include them.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isManifestedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a representation with the manifestations it is realized in.  Inverse functional.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isMitigatedByIRS</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">This inferred property indicates that an event is mitigated by an IRS, based on the responses the IRS includes and their ability to affect the Event.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isProducedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Relates signals to the events which generate them.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isProducedByContext</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a SignalDomainRepresentation with the context that produces it.  

For example, a TCP source port can be produced by a TCP Packet. Functional, as the real intention is to provide a concept that joins a signal domain with the context it is present in.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isProducerOf</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Relates events to the signals they produce.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isProvidedBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Signal domain contexts provide additional resource which may not be a part of the signals of an event.  For instance, a CodeRed worm propagation attempt usually occurs in the context of an IP Packet, which provides resources such as source IP address and destination IP address.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isProviderOfResource</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Maps signal contexts to the resources they provide.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isRepresentableBy</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">No longer needed?

Indicates that a signal can be represented by a particular syntactic form.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isRepresentedBy</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Relates a signal with the signal domain representations able to represent it.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#isResponseFor</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This relation indicates that a response has a set of required resources which overlaps the set of indicated resources by the signals an Event produces.  </Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#representsDetector</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Associates a detector syntax with the detectors that use it.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#respondsTo</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">An inferred property indicating that an IRS is able to mitigate an event.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#signalConstraintImplementation</IRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">This datatype should specify a java class in the current classpath which can be instantiated via reflection to parse, verify, and produce the canonical representation it is associated with.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#usedByResponse</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Maps resources to the responses they are able to satisfy requirements for.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <IRI>#usesResource</IRI>
        <Literal xml:lang="en" datatypeIRI="&rdf;PlainLiteral">Represents the resource(s) a response is able to use (some may not be required, but can be used for more targeted responses when available).  If all resource requirements are met, the response is considered viable given the observed signals.</Literal>
    </AnnotationAssertion>
    <AnnotationAssertion>
        <AnnotationProperty abbreviatedIRI="rdfs:comment"/>
        <AbbreviatedIRI>:Thing</AbbreviatedIRI>
        <Literal datatypeIRI="&rdf;PlainLiteral">Everything is a &quot;Thing&quot;</Literal>
    </AnnotationAssertion>
</Ontology>



<!-- Generated by the OWL API (version 3.1.0.20069) http://owlapi.sourceforge.net -->

